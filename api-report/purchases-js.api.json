{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.52.13",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "projectFolderUrl": "http://github.com/RevenueCat/purchases-js/src",
  "kind": "Package",
  "canonicalReference": "@revenuecat/purchases-js!",
  "docComment": "",
  "name": "@revenuecat/purchases-js",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@revenuecat/purchases-js!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!BrandingAppearance:interface",
          "docComment": "/**\n * `BrandingAppearance` defines the appearance settings of an app's branding configuration.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface BrandingAppearance "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "BrandingAppearance",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!BrandingAppearance#color_accent:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "color_accent: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "color_accent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!BrandingAppearance#color_buttons_primary:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "color_buttons_primary: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "color_buttons_primary",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!BrandingAppearance#color_error:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "color_error: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "color_error",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!BrandingAppearance#color_form_bg:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "color_form_bg: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "color_form_bg",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!BrandingAppearance#color_page_bg:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "color_page_bg: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "color_page_bg",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!BrandingAppearance#color_product_info_bg:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "color_product_info_bg: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "color_product_info_bg",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!BrandingAppearance#font:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "font: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "font",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!BrandingAppearance#shapes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "shapes: "
                },
                {
                  "kind": "Content",
                  "text": "\"default\" | \"rectangle\" | \"rounded\" | \"pill\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "shapes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!BrandingAppearance#show_product_description:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "show_product_description: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "show_product_description",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!CustomerInfo:interface",
          "docComment": "/**\n * Type containing all information regarding the customer.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface CustomerInfo "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "CustomerInfo",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!CustomerInfo#activeSubscriptions:member",
              "docComment": "/**\n * Set of active subscription product identifiers.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly activeSubscriptions: "
                },
                {
                  "kind": "Reference",
                  "text": "Set",
                  "canonicalReference": "!Set:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "activeSubscriptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!CustomerInfo#allExpirationDatesByProduct:member",
              "docComment": "/**\n * Map of productIds to expiration dates.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly allExpirationDatesByProduct: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [productIdentifier: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "allExpirationDatesByProduct",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!CustomerInfo#allPurchaseDatesByProduct:member",
              "docComment": "/**\n * Map of productIds to purchase dates.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly allPurchaseDatesByProduct: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [productIdentifier: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "allPurchaseDatesByProduct",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!CustomerInfo#entitlements:member",
              "docComment": "/**\n * Entitlements attached to this customer info.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly entitlements: "
                },
                {
                  "kind": "Reference",
                  "text": "EntitlementInfos",
                  "canonicalReference": "@revenuecat/purchases-js!EntitlementInfos:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "entitlements",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!CustomerInfo#firstSeenDate:member",
              "docComment": "/**\n * The date this user was first seen in RevenueCat.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly firstSeenDate: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "firstSeenDate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!CustomerInfo#managementURL:member",
              "docComment": "/**\n * URL to manage the active subscription of the user. If this user has an active Web Billing subscription, a link to the management page. If this user has an active iOS subscription, this will point to the App Store. If the user has an active Play Store subscription it will point there. If there are no active subscriptions it will be null.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly managementURL: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "managementURL",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!CustomerInfo#nonSubscriptionTransactions:member",
              "docComment": "/**\n * The list of non-subscription transactions made by the user.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly nonSubscriptionTransactions: "
                },
                {
                  "kind": "Reference",
                  "text": "NonSubscriptionTransaction",
                  "canonicalReference": "@revenuecat/purchases-js!NonSubscriptionTransaction:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "nonSubscriptionTransactions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!CustomerInfo#originalAppUserId:member",
              "docComment": "/**\n * The original App User Id recorded for this user.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly originalAppUserId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "originalAppUserId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!CustomerInfo#originalPurchaseDate:member",
              "docComment": "/**\n * The purchase date for the version of the application when the user bought the app. Use this for grandfathering users when migrating to subscriptions. This can be null.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly originalPurchaseDate: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "originalPurchaseDate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!CustomerInfo#requestDate:member",
              "docComment": "/**\n * Date when this info was requested.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly requestDate: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "requestDate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!CustomerInfo#subscriptionsByProductIdentifier:member",
              "docComment": "/**\n * Dictionary of all subscription product identifiers and their subscription info.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly subscriptionsByProductIdentifier: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [productId: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "SubscriptionInfo",
                  "canonicalReference": "@revenuecat/purchases-js!SubscriptionInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "subscriptionsByProductIdentifier",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!EntitlementInfo:interface",
          "docComment": "/**\n * This object gives you access to all the information about the status of a user's entitlements.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface EntitlementInfo "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "EntitlementInfo",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!EntitlementInfo#billingIssueDetectedAt:member",
              "docComment": "/**\n * The date a billing issue was detected. Can be `null` if there is no billing issue or an issue has been resolved. Note: Entitlement may still be active even if there is a billing issue. Check the `isActive` property.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly billingIssueDetectedAt: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "billingIssueDetectedAt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!EntitlementInfo#expirationDate:member",
              "docComment": "/**\n * The expiration date for the entitlement, can be `null` for lifetime access. If the {@link EntitlementInfo.periodType} is `trial`, this is the trial expiration date.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly expirationDate: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "expirationDate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!EntitlementInfo#identifier:member",
              "docComment": "/**\n * The entitlement identifier configured in the RevenueCat dashboard.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly identifier: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "identifier",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!EntitlementInfo#isActive:member",
              "docComment": "/**\n * True if the user has access to the entitlement.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly isActive: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isActive",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!EntitlementInfo#isSandbox:member",
              "docComment": "/**\n * False if this entitlement is unlocked via a production purchase.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly isSandbox: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isSandbox",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!EntitlementInfo#latestPurchaseDate:member",
              "docComment": "/**\n * The latest purchase or renewal date for the entitlement.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly latestPurchaseDate: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "latestPurchaseDate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!EntitlementInfo#originalPurchaseDate:member",
              "docComment": "/**\n * The first date this entitlement was purchased.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly originalPurchaseDate: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "originalPurchaseDate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!EntitlementInfo#ownershipType:member",
              "docComment": "/**\n * Use this property to determine whether a purchase was made by the current user or shared to them by a family member. This can be useful for onboarding users who have had an entitlement shared with them, but might not be entirely aware of the benefits they now have.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly ownershipType: "
                },
                {
                  "kind": "Reference",
                  "text": "OwnershipType",
                  "canonicalReference": "@revenuecat/purchases-js!OwnershipType:type"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ownershipType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!EntitlementInfo#periodType:member",
              "docComment": "/**\n * The last period type this entitlement was in.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly periodType: "
                },
                {
                  "kind": "Reference",
                  "text": "PeriodType",
                  "canonicalReference": "@revenuecat/purchases-js!PeriodType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "periodType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!EntitlementInfo#productIdentifier:member",
              "docComment": "/**\n * The product identifier that unlocked this entitlement.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly productIdentifier: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "productIdentifier",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!EntitlementInfo#productPlanIdentifier:member",
              "docComment": "/**\n * The base plan identifier that unlocked this entitlement (For Google Play subs only).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly productPlanIdentifier: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "productPlanIdentifier",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!EntitlementInfo#store:member",
              "docComment": "/**\n * The store where this entitlement was unlocked from.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly store: "
                },
                {
                  "kind": "Reference",
                  "text": "Store",
                  "canonicalReference": "@revenuecat/purchases-js!Store:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "store",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!EntitlementInfo#unsubscribeDetectedAt:member",
              "docComment": "/**\n * The date an unsubscribe was detected. Can be `null`. Note: Entitlement may still be active even if user has unsubscribed. Check the {@link EntitlementInfo.isActive} property.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly unsubscribeDetectedAt: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "unsubscribeDetectedAt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!EntitlementInfo#willRenew:member",
              "docComment": "/**\n * True if the underlying subscription is set to renew at the end of the billing period (expirationDate). Will always be True if entitlement is for lifetime access.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly willRenew: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "willRenew",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!EntitlementInfos:interface",
          "docComment": "/**\n * Contains all the entitlements associated to the user.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface EntitlementInfos "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "EntitlementInfos",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!EntitlementInfos#active:member",
              "docComment": "/**\n * Dictionary of active {@link EntitlementInfo} keyed by entitlement identifier.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly active: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [entitlementId: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "EntitlementInfo",
                  "canonicalReference": "@revenuecat/purchases-js!EntitlementInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "active",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!EntitlementInfos#all:member",
              "docComment": "/**\n * Map of all {@link EntitlementInfo} objects (active and inactive) keyed by entitlement identifier.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly all: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [entitlementId: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "EntitlementInfo",
                  "canonicalReference": "@revenuecat/purchases-js!EntitlementInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "all",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "@revenuecat/purchases-js!ErrorCode:enum",
          "docComment": "/**\n * Error codes for the Purchases SDK.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum ErrorCode "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "ErrorCode",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.ConfigurationError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ConfigurationError = "
                },
                {
                  "kind": "Content",
                  "text": "23"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "ConfigurationError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.CustomerInfoError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CustomerInfoError = "
                },
                {
                  "kind": "Content",
                  "text": "28"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "CustomerInfoError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.EmptySubscriberAttributesError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "EmptySubscriberAttributesError = "
                },
                {
                  "kind": "Content",
                  "text": "25"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "EmptySubscriberAttributesError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.IneligibleError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "IneligibleError = "
                },
                {
                  "kind": "Content",
                  "text": "18"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "IneligibleError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.InsufficientPermissionsError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "InsufficientPermissionsError = "
                },
                {
                  "kind": "Content",
                  "text": "19"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "InsufficientPermissionsError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.InvalidAppleSubscriptionKeyError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "InvalidAppleSubscriptionKeyError = "
                },
                {
                  "kind": "Content",
                  "text": "17"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "InvalidAppleSubscriptionKeyError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.InvalidAppUserIdError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "InvalidAppUserIdError = "
                },
                {
                  "kind": "Content",
                  "text": "14"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "InvalidAppUserIdError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.InvalidCredentialsError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "InvalidCredentialsError = "
                },
                {
                  "kind": "Content",
                  "text": "11"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "InvalidCredentialsError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.InvalidEmailError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "InvalidEmailError = "
                },
                {
                  "kind": "Content",
                  "text": "38"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "InvalidEmailError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.InvalidReceiptError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "InvalidReceiptError = "
                },
                {
                  "kind": "Content",
                  "text": "8"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "InvalidReceiptError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.InvalidSubscriberAttributesError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "InvalidSubscriberAttributesError = "
                },
                {
                  "kind": "Content",
                  "text": "21"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "InvalidSubscriberAttributesError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.LogOutWithAnonymousUserError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "LogOutWithAnonymousUserError = "
                },
                {
                  "kind": "Content",
                  "text": "22"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "LogOutWithAnonymousUserError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.MissingReceiptFileError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MissingReceiptFileError = "
                },
                {
                  "kind": "Content",
                  "text": "9"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "MissingReceiptFileError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.NetworkError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "NetworkError = "
                },
                {
                  "kind": "Content",
                  "text": "10"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "NetworkError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.OperationAlreadyInProgressError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "OperationAlreadyInProgressError = "
                },
                {
                  "kind": "Content",
                  "text": "15"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "OperationAlreadyInProgressError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.PaymentPendingError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PaymentPendingError = "
                },
                {
                  "kind": "Content",
                  "text": "20"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "PaymentPendingError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.ProductAlreadyPurchasedError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ProductAlreadyPurchasedError = "
                },
                {
                  "kind": "Content",
                  "text": "6"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "ProductAlreadyPurchasedError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.ProductNotAvailableForPurchaseError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ProductNotAvailableForPurchaseError = "
                },
                {
                  "kind": "Content",
                  "text": "5"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "ProductNotAvailableForPurchaseError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.PurchaseInvalidError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PurchaseInvalidError = "
                },
                {
                  "kind": "Content",
                  "text": "4"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "PurchaseInvalidError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.PurchaseNotAllowedError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PurchaseNotAllowedError = "
                },
                {
                  "kind": "Content",
                  "text": "3"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "PurchaseNotAllowedError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.ReceiptAlreadyInUseError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ReceiptAlreadyInUseError = "
                },
                {
                  "kind": "Content",
                  "text": "7"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "ReceiptAlreadyInUseError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.SignatureVerificationError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SignatureVerificationError = "
                },
                {
                  "kind": "Content",
                  "text": "36"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "SignatureVerificationError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.StoreProblemError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "StoreProblemError = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "StoreProblemError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.TestStoreSimulatedPurchaseError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "TestStoreSimulatedPurchaseError = "
                },
                {
                  "kind": "Content",
                  "text": "42"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "TestStoreSimulatedPurchaseError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.UnexpectedBackendResponseError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "UnexpectedBackendResponseError = "
                },
                {
                  "kind": "Content",
                  "text": "12"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "UnexpectedBackendResponseError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.UnknownBackendError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "UnknownBackendError = "
                },
                {
                  "kind": "Content",
                  "text": "16"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "UnknownBackendError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.UnknownError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "UnknownError = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "UnknownError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.UnsupportedError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "UnsupportedError = "
                },
                {
                  "kind": "Content",
                  "text": "24"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "UnsupportedError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.UserCancelledError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "UserCancelledError = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "UserCancelledError"
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!FlagsConfig:interface",
          "docComment": "/**\n * Flags used to enable or disable certain features in the sdk.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface FlagsConfig "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "FlagsConfig",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!FlagsConfig#autoCollectUTMAsMetadata:member",
              "docComment": "/**\n * If set to true, the SDK will automatically collect UTM parameters and store them as at the time of purchase.\n *\n * @defaultValue\n *\n * true\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "autoCollectUTMAsMetadata?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "autoCollectUTMAsMetadata",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!FlagsConfig#collectAnalyticsEvents:member",
              "docComment": "/**\n * If set to true, the SDK will automatically collect analytics events.\n *\n * @defaultValue\n *\n * true\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "collectAnalyticsEvents?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "collectAnalyticsEvents",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!GetOfferingsParams:interface",
          "docComment": "/**\n * Parameters for the {@link Purchases.getOfferings} method.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface GetOfferingsParams "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "GetOfferingsParams",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!GetOfferingsParams#currency:member",
              "docComment": "/**\n * The currency code in ISO 4217 to fetch the offerings for. If not specified, the default currency will be used.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly currency?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "currency",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!GetOfferingsParams#offeringIdentifier:member",
              "docComment": "/**\n * The identifier of the offering to fetch. Can be a string identifier or one of the predefined keywords.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly offeringIdentifier?: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "OfferingKeyword",
                  "canonicalReference": "@revenuecat/purchases-js!OfferingKeyword:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "offeringIdentifier",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!HttpConfig:interface",
          "docComment": "/**\n * Parameters used to customise the http requests executed by purchases-js.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface HttpConfig "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "HttpConfig",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!HttpConfig#additionalHeaders:member",
              "docComment": "/**\n * Additional headers to include in all HTTP requests.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "additionalHeaders?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "additionalHeaders",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!HttpConfig#proxyURL:member",
              "docComment": "/**\n * Set this property to your proxy URL *only* if you've received a proxy key value from your RevenueCat contact. This value should never end with a trailing slash.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "proxyURL?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "proxyURL",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@revenuecat/purchases-js!LogHandler:type",
          "docComment": "/**\n * Custom log handler function type. Allows you to handle SDK log messages with your own logging system.\n *\n * @param logLevel - The log level of the message\n *\n * @param message - The log message\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type LogHandler = "
            },
            {
              "kind": "Content",
              "text": "(logLevel: "
            },
            {
              "kind": "Reference",
              "text": "LogLevel",
              "canonicalReference": "@revenuecat/purchases-js!LogLevel:enum"
            },
            {
              "kind": "Content",
              "text": ", message: string) => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "LogHandler",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Enum",
          "canonicalReference": "@revenuecat/purchases-js!LogLevel:enum",
          "docComment": "/**\n * Possible levels to log in the console.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum LogLevel "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "LogLevel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!LogLevel.Debug:member",
              "docComment": "/**\n * Debug, info, warnings, and errors will be shown in the console.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Debug = "
                },
                {
                  "kind": "Content",
                  "text": "4"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Debug"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!LogLevel.Error:member",
              "docComment": "/**\n * Only errors will be shown in the console.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Error = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Error"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!LogLevel.Info:member",
              "docComment": "/**\n * Only info, warnings, and errors will be shown in the console.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Info = "
                },
                {
                  "kind": "Content",
                  "text": "3"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Info"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!LogLevel.Silent:member",
              "docComment": "/**\n * No logs will be shown in the console.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Silent = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Silent"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!LogLevel.Verbose:member",
              "docComment": "/**\n * All logs will be shown in the console.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Verbose = "
                },
                {
                  "kind": "Content",
                  "text": "5"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Verbose"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!LogLevel.Warn:member",
              "docComment": "/**\n * Only warnings and errors will be shown in the console.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Warn = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Warn"
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!NonSubscriptionOption:interface",
          "docComment": "/**\n * Represents a possible option to purchase a non-subscription product.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface NonSubscriptionOption extends "
            },
            {
              "kind": "Reference",
              "text": "PurchaseOption",
              "canonicalReference": "@revenuecat/purchases-js!PurchaseOption:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "NonSubscriptionOption",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!NonSubscriptionOption#basePrice:member",
              "docComment": "/**\n * The base price for the product.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly basePrice: "
                },
                {
                  "kind": "Reference",
                  "text": "Price",
                  "canonicalReference": "@revenuecat/purchases-js!Price:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "basePrice",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!NonSubscriptionTransaction:interface",
          "docComment": "/**\n * Information that represents a non-subscription purchase made by a user.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface NonSubscriptionTransaction "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "NonSubscriptionTransaction",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!NonSubscriptionTransaction#productIdentifier:member",
              "docComment": "/**\n * The product identifier.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly productIdentifier: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "productIdentifier",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!NonSubscriptionTransaction#purchaseDate:member",
              "docComment": "/**\n * The date that the store charged the user’s account.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly purchaseDate: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "purchaseDate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!NonSubscriptionTransaction#store:member",
              "docComment": "/**\n * The {@link Store} where the transaction was made.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly store: "
                },
                {
                  "kind": "Reference",
                  "text": "Store",
                  "canonicalReference": "@revenuecat/purchases-js!Store:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "store",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!NonSubscriptionTransaction#storeTransactionId:member",
              "docComment": "/**\n * The unique identifier for the transaction created by the Store.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly storeTransactionId: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "storeTransactionId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!NonSubscriptionTransaction#transactionIdentifier:member",
              "docComment": "/**\n * The unique identifier for the transaction created by RevenueCat.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly transactionIdentifier: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "transactionIdentifier",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!Offering:interface",
          "docComment": "/**\n * An offering is a collection of {@link Package} available for the user to purchase. For more info see https://docs.revenuecat.com/docs/entitlements\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface Offering "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "Offering",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Offering#annual:member",
              "docComment": "/**\n * Annual package type configured in the RevenueCat dashboard, if available.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly annual: "
                },
                {
                  "kind": "Reference",
                  "text": "Package",
                  "canonicalReference": "@revenuecat/purchases-js!Package:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "annual",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Offering#availablePackages:member",
              "docComment": "/**\n * A list of all the packages available for purchase.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly availablePackages: "
                },
                {
                  "kind": "Reference",
                  "text": "Package",
                  "canonicalReference": "@revenuecat/purchases-js!Package:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "availablePackages",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Offering#identifier:member",
              "docComment": "/**\n * Unique identifier defined in RevenueCat dashboard.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly identifier: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "identifier",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Offering#lifetime:member",
              "docComment": "/**\n * Lifetime package type configured in the RevenueCat dashboard, if available.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly lifetime: "
                },
                {
                  "kind": "Reference",
                  "text": "Package",
                  "canonicalReference": "@revenuecat/purchases-js!Package:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "lifetime",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Offering#metadata:member",
              "docComment": "/**\n * Offering metadata defined in RevenueCat dashboard.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly metadata: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: string]: unknown;\n    } | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "metadata",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Offering#monthly:member",
              "docComment": "/**\n * Monthly package type configured in the RevenueCat dashboard, if available.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly monthly: "
                },
                {
                  "kind": "Reference",
                  "text": "Package",
                  "canonicalReference": "@revenuecat/purchases-js!Package:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "monthly",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Offering#packagesById:member",
              "docComment": "/**\n * A map of all the packages available for purchase keyed by package ID.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly packagesById: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "Package",
                  "canonicalReference": "@revenuecat/purchases-js!Package:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "packagesById",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Offering#serverDescription:member",
              "docComment": "/**\n * Offering description defined in RevenueCat dashboard.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly serverDescription: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "serverDescription",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Offering#sixMonth:member",
              "docComment": "/**\n * Six month package type configured in the RevenueCat dashboard, if available.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly sixMonth: "
                },
                {
                  "kind": "Reference",
                  "text": "Package",
                  "canonicalReference": "@revenuecat/purchases-js!Package:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "sixMonth",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Offering#threeMonth:member",
              "docComment": "/**\n * Three month package type configured in the RevenueCat dashboard, if available.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly threeMonth: "
                },
                {
                  "kind": "Reference",
                  "text": "Package",
                  "canonicalReference": "@revenuecat/purchases-js!Package:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "threeMonth",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Offering#twoMonth:member",
              "docComment": "/**\n * Two month package type configured in the RevenueCat dashboard, if available.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly twoMonth: "
                },
                {
                  "kind": "Reference",
                  "text": "Package",
                  "canonicalReference": "@revenuecat/purchases-js!Package:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "twoMonth",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Offering#weekly:member",
              "docComment": "/**\n * Weekly package type configured in the RevenueCat dashboard, if available.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly weekly: "
                },
                {
                  "kind": "Reference",
                  "text": "Package",
                  "canonicalReference": "@revenuecat/purchases-js!Package:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "weekly",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "@revenuecat/purchases-js!OfferingKeyword:enum",
          "docComment": "/**\n * Keywords for identifying specific offerings in the {@link Purchases.getOfferings} method.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum OfferingKeyword "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "OfferingKeyword",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!OfferingKeyword.Current:member",
              "docComment": "/**\n * The current offering.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Current = "
                },
                {
                  "kind": "Content",
                  "text": "\"current\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Current"
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!Offerings:interface",
          "docComment": "/**\n * This class contains all the offerings configured in RevenueCat dashboard. For more info see https://docs.revenuecat.com/docs/entitlements\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface Offerings "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "Offerings",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Offerings#all:member",
              "docComment": "/**\n * Dictionary containing all {@link Offering} objects, keyed by their identifier.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly all: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [offeringId: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "Offering",
                  "canonicalReference": "@revenuecat/purchases-js!Offering:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "all",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Offerings#current:member",
              "docComment": "/**\n * Current offering configured in the RevenueCat dashboard. It can be `null` if no current offering is configured or if a specific offering was requested that is not the current one.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly current: "
                },
                {
                  "kind": "Reference",
                  "text": "Offering",
                  "canonicalReference": "@revenuecat/purchases-js!Offering:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "current",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@revenuecat/purchases-js!OwnershipType:type",
          "docComment": "/**\n * The types used to describe whether a transaction was purchased by the user, or is available to them through Family Sharing.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type OwnershipType = "
            },
            {
              "kind": "Content",
              "text": "\"PURCHASED\" | \"FAMILY_SHARED\" | \"UNKNOWN\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "OwnershipType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!Package:interface",
          "docComment": "/**\n * Contains information about the product available for the user to purchase. For more info see https://docs.revenuecat.com/docs/entitlements\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface Package "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "Package",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Package#identifier:member",
              "docComment": "/**\n * Unique identifier for this package. Can be one a predefined package type or a custom one.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly identifier: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "identifier",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Package#packageType:member",
              "docComment": "/**\n * The type of package.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly packageType: "
                },
                {
                  "kind": "Reference",
                  "text": "PackageType",
                  "canonicalReference": "@revenuecat/purchases-js!PackageType:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "packageType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Package#rcBillingProduct:member",
              "docComment": "/**\n * The {@link Product} assigned to this package.\n *\n * @deprecated\n *\n * - Use {@link Package.webBillingProduct} instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly rcBillingProduct: "
                },
                {
                  "kind": "Reference",
                  "text": "Product",
                  "canonicalReference": "@revenuecat/purchases-js!Product:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "rcBillingProduct",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Package#webBillingProduct:member",
              "docComment": "/**\n * The {@link Product} assigned to this package.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly webBillingProduct: "
                },
                {
                  "kind": "Reference",
                  "text": "Product",
                  "canonicalReference": "@revenuecat/purchases-js!Product:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "webBillingProduct",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "@revenuecat/purchases-js!PackageType:enum",
          "docComment": "/**\n * Enumeration of all possible Package types.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum PackageType "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "PackageType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!PackageType.Annual:member",
              "docComment": "/**\n * A package configured with the predefined annual identifier.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Annual = "
                },
                {
                  "kind": "Content",
                  "text": "\"$rc_annual\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Annual"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!PackageType.Custom:member",
              "docComment": "/**\n * A package that was defined with a custom identifier.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Custom = "
                },
                {
                  "kind": "Content",
                  "text": "\"custom\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Custom"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!PackageType.Lifetime:member",
              "docComment": "/**\n * A package configured with the predefined lifetime identifier.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Lifetime = "
                },
                {
                  "kind": "Content",
                  "text": "\"$rc_lifetime\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Lifetime"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!PackageType.Monthly:member",
              "docComment": "/**\n * A package configured with the predefined monthly identifier.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Monthly = "
                },
                {
                  "kind": "Content",
                  "text": "\"$rc_monthly\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Monthly"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!PackageType.SixMonth:member",
              "docComment": "/**\n * A package configured with the predefined six month identifier.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SixMonth = "
                },
                {
                  "kind": "Content",
                  "text": "\"$rc_six_month\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "SixMonth"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!PackageType.ThreeMonth:member",
              "docComment": "/**\n * A package configured with the predefined three month identifier.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ThreeMonth = "
                },
                {
                  "kind": "Content",
                  "text": "\"$rc_three_month\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "ThreeMonth"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!PackageType.TwoMonth:member",
              "docComment": "/**\n * A package configured with the predefined two month identifier.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "TwoMonth = "
                },
                {
                  "kind": "Content",
                  "text": "\"$rc_two_month\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "TwoMonth"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!PackageType.Unknown:member",
              "docComment": "/**\n * A package that was defined with an unrecognized RC identifier.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Unknown = "
                },
                {
                  "kind": "Content",
                  "text": "\"unknown\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Unknown"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!PackageType.Weekly:member",
              "docComment": "/**\n * A package configured with the predefined weekly identifier.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Weekly = "
                },
                {
                  "kind": "Content",
                  "text": "\"$rc_weekly\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Weekly"
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!Period:interface",
          "docComment": "/**\n * Represents a period of time.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface Period "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "Period",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Period#number:member",
              "docComment": "/**\n * The number of units in the period.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "number: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "number",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Period#unit:member",
              "docComment": "/**\n * The unit of time.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "unit: "
                },
                {
                  "kind": "Reference",
                  "text": "PeriodUnit",
                  "canonicalReference": "@revenuecat/purchases-js!PeriodUnit:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "unit",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@revenuecat/purchases-js!PeriodType:type",
          "docComment": "/**\n * Supported period types for an entitlement. - \"normal\" If the entitlement is not under an introductory or trial period. - \"intro\" If the entitlement is under an introductory period. - \"trial\" If the entitlement is under a trial period. - \"prepaid\" If the entitlement is a prepaid entitlement. Only for Google Play subscriptions.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PeriodType = "
            },
            {
              "kind": "Content",
              "text": "\"normal\" | \"intro\" | \"trial\" | \"prepaid\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "PeriodType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Enum",
          "canonicalReference": "@revenuecat/purchases-js!PeriodUnit:enum",
          "docComment": "/**\n * Represents a unit of time.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum PeriodUnit "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "PeriodUnit",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!PeriodUnit.Day:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Day = "
                },
                {
                  "kind": "Content",
                  "text": "\"day\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Day"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!PeriodUnit.Month:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Month = "
                },
                {
                  "kind": "Content",
                  "text": "\"month\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Month"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!PeriodUnit.Week:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Week = "
                },
                {
                  "kind": "Content",
                  "text": "\"week\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Week"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!PeriodUnit.Year:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Year = "
                },
                {
                  "kind": "Content",
                  "text": "\"year\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Year"
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!PlatformInfo:interface",
          "docComment": "/**\n * PlatformInfo is an interface that represents the information about the platform. Used by RevenueCat Hybrid SDKs to provide information about the platform.\n *\n * @public @experimental\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface PlatformInfo "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "PlatformInfo",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!PlatformInfo#flavor:member",
              "docComment": "/**\n * The flavor of the SDK.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly flavor: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "flavor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!PlatformInfo#version:member",
              "docComment": "/**\n * The version of the hybrid SDK.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly version: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "version",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!PresentedOfferingContext:interface",
          "docComment": "/**\n * Contains data about the context in which an offering was presented.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface PresentedOfferingContext "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "PresentedOfferingContext",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!PresentedOfferingContext#offeringIdentifier:member",
              "docComment": "/**\n * The identifier of the offering used to obtain this object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly offeringIdentifier: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "offeringIdentifier",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!PresentedOfferingContext#placementIdentifier:member",
              "docComment": "/**\n * If obtained this information from a placement, the identifier of the placement.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly placementIdentifier: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "placementIdentifier",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!PresentedOfferingContext#targetingContext:member",
              "docComment": "/**\n * The targeting context used to obtain this object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly targetingContext: "
                },
                {
                  "kind": "Reference",
                  "text": "TargetingContext",
                  "canonicalReference": "@revenuecat/purchases-js!TargetingContext:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "targetingContext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!Price:interface",
          "docComment": "/**\n * Price information for a product.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface Price "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "Price",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Price#amount:member",
              "docComment": "/**\n * Price in cents of the currency.\n *\n * @deprecated\n *\n * - Use {@link Price.amountMicros} instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly amount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "amount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Price#amountMicros:member",
              "docComment": "/**\n * Price in micro-units of the currency. For example, $9.99 is represented as 9990000.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly amountMicros: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "amountMicros",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Price#currency:member",
              "docComment": "/**\n * Returns ISO 4217 currency code for price. For example, if price is specified in British pounds sterling, currency is \"GBP\". If currency code cannot be determined, currency symbol is returned.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly currency: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "currency",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Price#formattedPrice:member",
              "docComment": "/**\n * Formatted price string including price and currency.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly formattedPrice: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "formattedPrice",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!PricingPhase:interface",
          "docComment": "/**\n * Represents the price and duration information for a phase of the purchase option.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface PricingPhase "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "PricingPhase",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!PricingPhase#cycleCount:member",
              "docComment": "/**\n * The number of cycles this option's price repeats. I.e. 2 subscription cycles, 0 if not applicable.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly cycleCount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "cycleCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!PricingPhase#period:member",
              "docComment": "/**\n * The duration of the phase as a {@link Period}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly period: "
                },
                {
                  "kind": "Reference",
                  "text": "Period",
                  "canonicalReference": "@revenuecat/purchases-js!Period:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "period",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!PricingPhase#periodDuration:member",
              "docComment": "/**\n * The duration of the phase in ISO 8601 format.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly periodDuration: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "periodDuration",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!PricingPhase#price:member",
              "docComment": "/**\n * The price for the purchase option. Null in case of trials.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly price: "
                },
                {
                  "kind": "Reference",
                  "text": "Price",
                  "canonicalReference": "@revenuecat/purchases-js!Price:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "price",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!PricingPhase#pricePerMonth:member",
              "docComment": "/**\n * The approximated price converted to monthly rate, based on the period information. Null in case of trials.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly pricePerMonth: "
                },
                {
                  "kind": "Reference",
                  "text": "Price",
                  "canonicalReference": "@revenuecat/purchases-js!Price:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "pricePerMonth",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!PricingPhase#pricePerWeek:member",
              "docComment": "/**\n * The approximated price converted to weekly rate, based on the period information. Null in case of trials.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly pricePerWeek: "
                },
                {
                  "kind": "Reference",
                  "text": "Price",
                  "canonicalReference": "@revenuecat/purchases-js!Price:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "pricePerWeek",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!PricingPhase#pricePerYear:member",
              "docComment": "/**\n * The approximated price converted to yearly rate, based on the period information. Null in case of trials.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly pricePerYear: "
                },
                {
                  "kind": "Reference",
                  "text": "Price",
                  "canonicalReference": "@revenuecat/purchases-js!Price:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "pricePerYear",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!Product:interface",
          "docComment": "/**\n * Represents product's listing details.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface Product "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "Product",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Product#currentPrice:member",
              "docComment": "/**\n * Price of the product. This will match the default option's base phase price in subscriptions or the price in non-subscriptions.\n *\n * @deprecated\n *\n * Use {@link Product.price}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly currentPrice: "
                },
                {
                  "kind": "Reference",
                  "text": "Price",
                  "canonicalReference": "@revenuecat/purchases-js!Price:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "currentPrice",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Product#defaultNonSubscriptionOption:member",
              "docComment": "/**\n * The default non-subscription option for this product. Null in the case of subscriptions.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly defaultNonSubscriptionOption: "
                },
                {
                  "kind": "Reference",
                  "text": "NonSubscriptionOption",
                  "canonicalReference": "@revenuecat/purchases-js!NonSubscriptionOption:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "defaultNonSubscriptionOption",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Product#defaultPurchaseOption:member",
              "docComment": "/**\n * The default purchase option for this product.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly defaultPurchaseOption: "
                },
                {
                  "kind": "Reference",
                  "text": "PurchaseOption",
                  "canonicalReference": "@revenuecat/purchases-js!PurchaseOption:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "defaultPurchaseOption",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Product#defaultSubscriptionOption:member",
              "docComment": "/**\n * The default subscription option for this product. Null if no subscription options are available like in the case of consumables and non-consumables.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly defaultSubscriptionOption: "
                },
                {
                  "kind": "Reference",
                  "text": "SubscriptionOption",
                  "canonicalReference": "@revenuecat/purchases-js!SubscriptionOption:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "defaultSubscriptionOption",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Product#description:member",
              "docComment": "/**\n * The description of the product as configured in the RevenueCat dashboard.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly description: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "description",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Product#displayName:member",
              "docComment": "/**\n * Name of the product.\n *\n * @deprecated\n *\n * - Use {@link Product.title} instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly displayName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "displayName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Product#freeTrialPhase:member",
              "docComment": "/**\n * Free trial phase information for subscriptions. Null for non-subscriptions or when no free trial is available. Convenience accessor for defaultSubscriptionOption?.trial.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly freeTrialPhase: "
                },
                {
                  "kind": "Reference",
                  "text": "PricingPhase",
                  "canonicalReference": "@revenuecat/purchases-js!PricingPhase:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "freeTrialPhase",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Product#identifier:member",
              "docComment": "/**\n * The product ID.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly identifier: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "identifier",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Product#introPricePhase:member",
              "docComment": "/**\n * Introductory price phase information for subscriptions. Null for non-subscriptions or when no introductory price is available. Convenience accessor for defaultSubscriptionOption?.introPrice.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly introPricePhase: "
                },
                {
                  "kind": "Reference",
                  "text": "PricingPhase",
                  "canonicalReference": "@revenuecat/purchases-js!PricingPhase:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "introPricePhase",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Product#normalPeriodDuration:member",
              "docComment": "/**\n * The period duration for a subscription product. This will match the default option's base phase period duration. Null for non-subscriptions.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly normalPeriodDuration: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "normalPeriodDuration",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Product#period:member",
              "docComment": "/**\n * Base subscription duration. Null for non-subscriptions. Convenience accessor for the default subscription option's base phase period.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly period: "
                },
                {
                  "kind": "Reference",
                  "text": "Period",
                  "canonicalReference": "@revenuecat/purchases-js!Period:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "period",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Product#presentedOfferingContext:member",
              "docComment": "/**\n * The context from which this product was obtained.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly presentedOfferingContext: "
                },
                {
                  "kind": "Reference",
                  "text": "PresentedOfferingContext",
                  "canonicalReference": "@revenuecat/purchases-js!PresentedOfferingContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "presentedOfferingContext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Product#presentedOfferingIdentifier:member",
              "docComment": "/**\n * The offering ID used to obtain this product.\n *\n * @deprecated\n *\n * - Use {@link Product.presentedOfferingContext} instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly presentedOfferingIdentifier: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "presentedOfferingIdentifier",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Product#price:member",
              "docComment": "/**\n * Base price (after any offers) for subscriptions, price for non-subscriptions.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly price: "
                },
                {
                  "kind": "Reference",
                  "text": "Price",
                  "canonicalReference": "@revenuecat/purchases-js!Price:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "price",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Product#productType:member",
              "docComment": "/**\n * The type of product.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly productType: "
                },
                {
                  "kind": "Reference",
                  "text": "ProductType",
                  "canonicalReference": "@revenuecat/purchases-js!ProductType:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "productType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Product#subscriptionOptions:member",
              "docComment": "/**\n * A dictionary with all the possible subscription options available for this product. Each key contains the key to be used when executing a purchase. Will be empty for non-subscriptions\n *\n * If retrieved through getOfferings the offers are only the ones the customer is entitled to.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly subscriptionOptions: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [optionId: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "SubscriptionOption",
                  "canonicalReference": "@revenuecat/purchases-js!SubscriptionOption:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "subscriptionOptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Product#title:member",
              "docComment": "/**\n * The title of the product as configured in the RevenueCat dashboard.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly title: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "title",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "@revenuecat/purchases-js!ProductType:enum",
          "docComment": "/**\n * Possible product types\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum ProductType "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "ProductType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ProductType.Consumable:member",
              "docComment": "/**\n * A product that does not renew and can be consumed to be purchased again.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Consumable = "
                },
                {
                  "kind": "Content",
                  "text": "\"consumable\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Consumable"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ProductType.NonConsumable:member",
              "docComment": "/**\n * A product that does not renew and can only be purchased once.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "NonConsumable = "
                },
                {
                  "kind": "Content",
                  "text": "\"non_consumable\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "NonConsumable"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ProductType.Subscription:member",
              "docComment": "/**\n * A product that is an auto-renewing subscription.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Subscription = "
                },
                {
                  "kind": "Content",
                  "text": "\"subscription\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Subscription"
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@revenuecat/purchases-js!PurchaseMetadata:type",
          "docComment": "/**\n * Metadata that can be passed to the backend when making a purchase. They will propagate to the payment gateway (i.e. Stripe) and to RevenueCat.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PurchaseMetadata = "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, string | null>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "PurchaseMetadata",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!PurchaseOption:interface",
          "docComment": "/**\n * Represents a possible option to purchase a product.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface PurchaseOption "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "PurchaseOption",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!PurchaseOption#id:member",
              "docComment": "/**\n * The unique id for a purchase option\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!PurchaseOption#priceId:member",
              "docComment": "/**\n * The public price id for this subscription option.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly priceId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "priceId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!PurchaseParams:interface",
          "docComment": "/**\n * Parameters used to customise the purchase flow when invoking the `.purchase` method.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface PurchaseParams "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "PurchaseParams",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!PurchaseParams#customerEmail:member",
              "docComment": "/**\n * The email of the user. If undefined, RevenueCat will ask the customer for their email.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "customerEmail?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "customerEmail",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!PurchaseParams#defaultLocale:member",
              "docComment": "/**\n * The default locale to use if the selectedLocale is not available. Defaults to english.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "defaultLocale?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "defaultLocale",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!PurchaseParams#htmlTarget:member",
              "docComment": "/**\n * The HTML element where the billing view should be added. If undefined, a new div will be created at the root of the page and appended to the body.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "htmlTarget?: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "htmlTarget",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!PurchaseParams#metadata:member",
              "docComment": "/**\n * The purchase metadata to be passed to the backend. Any information provided here will be propagated to the payment gateway and to the RC transaction as metadata.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "metadata?: "
                },
                {
                  "kind": "Reference",
                  "text": "PurchaseMetadata",
                  "canonicalReference": "@revenuecat/purchases-js!PurchaseMetadata:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "metadata",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!PurchaseParams#purchaseOption:member",
              "docComment": "/**\n * The option to be used for this purchase. If not specified or null the default one will be used.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "purchaseOption?: "
                },
                {
                  "kind": "Reference",
                  "text": "PurchaseOption",
                  "canonicalReference": "@revenuecat/purchases-js!PurchaseOption:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "purchaseOption",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!PurchaseParams#rcPackage:member",
              "docComment": "/**\n * The package you want to purchase. Obtained from {@link Purchases.getOfferings}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rcPackage: "
                },
                {
                  "kind": "Reference",
                  "text": "Package",
                  "canonicalReference": "@revenuecat/purchases-js!Package:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "rcPackage",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!PurchaseParams#selectedLocale:member",
              "docComment": "/**\n * The locale to use for the purchase flow. If not specified, English will be used\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectedLocale?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "selectedLocale",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!PurchaseParams#skipSuccessPage:member",
              "docComment": "/**\n * If set to true, the SDK will skip the success page and automatically continue the flow once the purchase completes successfully. Defaults to `false`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "skipSuccessPage?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "skipSuccessPage",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!PurchaseResult:interface",
          "docComment": "/**\n * Represents the result of a purchase operation.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface PurchaseResult "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "PurchaseResult",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!PurchaseResult#customerInfo:member",
              "docComment": "/**\n * The customer information after the purchase.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly customerInfo: "
                },
                {
                  "kind": "Reference",
                  "text": "CustomerInfo",
                  "canonicalReference": "@revenuecat/purchases-js!CustomerInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "customerInfo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!PurchaseResult#operationSessionId:member",
              "docComment": "/**\n * The operation session id of the purchase.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly operationSessionId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "operationSessionId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!PurchaseResult#redemptionInfo:member",
              "docComment": "/**\n * The redemption information after the purchase if available.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly redemptionInfo: "
                },
                {
                  "kind": "Reference",
                  "text": "RedemptionInfo",
                  "canonicalReference": "@revenuecat/purchases-js!RedemptionInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "redemptionInfo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!PurchaseResult#storeTransaction:member",
              "docComment": "/**\n * The store transaction associated with the purchase.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly storeTransaction: "
                },
                {
                  "kind": "Reference",
                  "text": "StoreTransaction",
                  "canonicalReference": "@revenuecat/purchases-js!StoreTransaction:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "storeTransaction",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@revenuecat/purchases-js!Purchases:class",
          "docComment": "/**\n * Entry point for Purchases SDK. It should be instantiated as soon as your app is started. Only one instance of Purchases should be instantiated at a time!\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Purchases "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Purchases",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@revenuecat/purchases-js!Purchases#changeUser:member(1)",
              "docComment": "/**\n * Change the current app user id. Returns the customer info for the new user id.\n *\n * @param newAppUserId - The user id to change to.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "changeUser(newAppUserId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CustomerInfo",
                  "canonicalReference": "@revenuecat/purchases-js!CustomerInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "newAppUserId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "changeUser"
            },
            {
              "kind": "Method",
              "canonicalReference": "@revenuecat/purchases-js!Purchases#close:member(1)",
              "docComment": "/**\n * Closes the Purchases instance. You should never have to do this normally.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "close(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "close"
            },
            {
              "kind": "Method",
              "canonicalReference": "@revenuecat/purchases-js!Purchases.configure:member(1)",
              "docComment": "/**\n * Configures the Purchases SDK. This should be called as soon as your app has a unique user id for your user. You should only call this once, and keep the returned instance around for use throughout your application.\n *\n * @param config - Configuration object containing apiKey, appUserId, and optional configurations.\n *\n * @throws\n *\n * {@link PurchasesError} if the API key or user id are invalid.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static configure(config: "
                },
                {
                  "kind": "Reference",
                  "text": "PurchasesConfig",
                  "canonicalReference": "@revenuecat/purchases-js!PurchasesConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Purchases",
                  "canonicalReference": "@revenuecat/purchases-js!Purchases:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "configure"
            },
            {
              "kind": "Method",
              "canonicalReference": "@revenuecat/purchases-js!Purchases.configure:member(2)",
              "docComment": "/**\n * Legacy method to configure the Purchases SDK. This method is deprecated and will be removed in a future version.\n *\n * @deprecated\n *\n * - please use the `configure` method with a {@link PurchasesConfig} object instead.\n *\n * @param apiKey - RevenueCat API Key. Can be obtained from the RevenueCat dashboard.\n *\n * @param appUserId - Your unique id for identifying the user.\n *\n * @param httpConfig - Advanced http configuration to customise the SDK usage {@link HttpConfig}.\n *\n * @param flags - Advanced functionality configuration {@link FlagsConfig}.\n *\n * @throws\n *\n * {@link PurchasesError} if the API key or user id are invalid.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static configure(apiKey: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", appUserId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", httpConfig?: "
                },
                {
                  "kind": "Reference",
                  "text": "HttpConfig",
                  "canonicalReference": "@revenuecat/purchases-js!HttpConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": ", flags?: "
                },
                {
                  "kind": "Reference",
                  "text": "FlagsConfig",
                  "canonicalReference": "@revenuecat/purchases-js!FlagsConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Purchases",
                  "canonicalReference": "@revenuecat/purchases-js!Purchases:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "apiKey",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "appUserId",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "httpConfig",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "flags",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "configure"
            },
            {
              "kind": "Method",
              "canonicalReference": "@revenuecat/purchases-js!Purchases.generateRevenueCatAnonymousAppUserId:member(1)",
              "docComment": "/**\n * Generates an anonymous app user ID that follows RevenueCat's format. This can be used when you don't have a user identifier system in place. The generated ID will be in the format: $RCAnonymousID:\\<UUID without dashes\\> Example: $RCAnonymousID:123e4567e89b12d3a456426614174000\n *\n * @returns A new anonymous app user ID string\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static generateRevenueCatAnonymousAppUserId(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "generateRevenueCatAnonymousAppUserId"
            },
            {
              "kind": "Method",
              "canonicalReference": "@revenuecat/purchases-js!Purchases#getAppUserId:member(1)",
              "docComment": "/**\n * Gets the current app user id.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAppUserId(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getAppUserId"
            },
            {
              "kind": "Method",
              "canonicalReference": "@revenuecat/purchases-js!Purchases#getCachedVirtualCurrencies:member(1)",
              "docComment": "/**\n * The currently cached {@link VirtualCurrencies} if one is available. This value will remain null until virtual currencies have been fetched at least once with {@link Purchases.getVirtualCurrencies} or an equivalent function.\n *\n * @returns {VirtualCurrencies | null} A {@link VirtualCurrencies} object containing the subscriber's virtual currencies, or null if no cached data is available.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCachedVirtualCurrencies(): "
                },
                {
                  "kind": "Reference",
                  "text": "VirtualCurrencies",
                  "canonicalReference": "@revenuecat/purchases-js!VirtualCurrencies:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getCachedVirtualCurrencies"
            },
            {
              "kind": "Method",
              "canonicalReference": "@revenuecat/purchases-js!Purchases#getCurrentOfferingForPlacement:member(1)",
              "docComment": "/**\n * Retrieves a specific offering by a placement identifier. For more info see https://www.revenuecat.com/docs/tools/targeting\n *\n * @param placementIdentifier - The placement identifier to retrieve the offering for.\n *\n * @param params - The parameters object to customise the offerings fetch. Check {@link GetOfferingsParams}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCurrentOfferingForPlacement(placementIdentifier: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", params?: "
                },
                {
                  "kind": "Reference",
                  "text": "GetOfferingsParams",
                  "canonicalReference": "@revenuecat/purchases-js!GetOfferingsParams:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Offering",
                  "canonicalReference": "@revenuecat/purchases-js!Offering:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "placementIdentifier",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getCurrentOfferingForPlacement"
            },
            {
              "kind": "Method",
              "canonicalReference": "@revenuecat/purchases-js!Purchases#getCustomerInfo:member(1)",
              "docComment": "/**\n * Gets latest available {@link CustomerInfo}.\n *\n * @returns The latest {@link CustomerInfo}.\n *\n * @throws\n *\n * {@link PurchasesError} if there is an error while fetching the customer info.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCustomerInfo(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CustomerInfo",
                  "canonicalReference": "@revenuecat/purchases-js!CustomerInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getCustomerInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@revenuecat/purchases-js!Purchases#getOfferings:member(1)",
              "docComment": "/**\n * Fetch the configured offerings for this user. You can configure these in the RevenueCat dashboard.\n *\n * @param params - The parameters object to customise the offerings fetch. Check {@link GetOfferingsParams}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getOfferings(params?: "
                },
                {
                  "kind": "Reference",
                  "text": "GetOfferingsParams",
                  "canonicalReference": "@revenuecat/purchases-js!GetOfferingsParams:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Offerings",
                  "canonicalReference": "@revenuecat/purchases-js!Offerings:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getOfferings"
            },
            {
              "kind": "Method",
              "canonicalReference": "@revenuecat/purchases-js!Purchases.getSharedInstance:member(1)",
              "docComment": "/**\n * Get the singleton instance of Purchases. It's preferred to use the instance obtained from the `configure` method when possible.\n *\n * @throws\n *\n * {@link UninitializedPurchasesError} if the instance has not been initialized yet.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static getSharedInstance(): "
                },
                {
                  "kind": "Reference",
                  "text": "Purchases",
                  "canonicalReference": "@revenuecat/purchases-js!Purchases:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getSharedInstance"
            },
            {
              "kind": "Method",
              "canonicalReference": "@revenuecat/purchases-js!Purchases#getVirtualCurrencies:member(1)",
              "docComment": "/**\n * Fetches the virtual currencies for the current subscriber.\n *\n * @returns {Promise<VirtualCurrencies>} A VirtualCurrencies object containing the subscriber's virtual currencies.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getVirtualCurrencies(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "VirtualCurrencies",
                  "canonicalReference": "@revenuecat/purchases-js!VirtualCurrencies:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getVirtualCurrencies"
            },
            {
              "kind": "Method",
              "canonicalReference": "@revenuecat/purchases-js!Purchases#invalidateVirtualCurrenciesCache:member(1)",
              "docComment": "/**\n * Invalidates the cache for virtual currencies.\n *\n * This is useful for cases where a virtual currency's balance might have been updated in a different part of your system, like if you decreased a user's balance from the user spending a virtual currency, or if you increased the balance from your backend using the server APIs.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "invalidateVirtualCurrenciesCache(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "invalidateVirtualCurrenciesCache"
            },
            {
              "kind": "Method",
              "canonicalReference": "@revenuecat/purchases-js!Purchases#isAnonymous:member(1)",
              "docComment": "/**\n * @returns Whether the current user is anonymous.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isAnonymous(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "isAnonymous"
            },
            {
              "kind": "Method",
              "canonicalReference": "@revenuecat/purchases-js!Purchases.isConfigured:member(1)",
              "docComment": "/**\n * Returns whether the Purchases SDK is configured or not.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static isConfigured(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "isConfigured"
            },
            {
              "kind": "Method",
              "canonicalReference": "@revenuecat/purchases-js!Purchases#isEntitledTo:member(1)",
              "docComment": "/**\n * Convenience method to check whether a user is entitled to a specific entitlement. This will use {@link Purchases.getCustomerInfo} under the hood.\n *\n * @param entitlementIdentifier - The entitlement identifier you want to check.\n *\n * @returns Whether the user is entitled to the specified entitlement\n *\n * @throws\n *\n * {@link PurchasesError} if there is an error while fetching the customer info.\n *\n * @see\n *\n * {@link Purchases.getCustomerInfo}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isEntitledTo(entitlementIdentifier: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "entitlementIdentifier",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "isEntitledTo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@revenuecat/purchases-js!Purchases#isSandbox:member(1)",
              "docComment": "/**\n * @returns Whether the SDK is using a sandbox API Key.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isSandbox(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "isSandbox"
            },
            {
              "kind": "Method",
              "canonicalReference": "@revenuecat/purchases-js!Purchases#preload:member(1)",
              "docComment": "/**\n * Loads and caches some optional data in the Purchases SDK. Currently only fetching branding information. You can call this method after configuring the SDK to speed up the first call to {@link Purchases.purchase}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "preload(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "preload"
            },
            {
              "kind": "Method",
              "canonicalReference": "@revenuecat/purchases-js!Purchases#purchase:member(1)",
              "docComment": "/**\n * Method to perform a purchase for a given package. You can obtain the package from {@link Purchases.getOfferings}. This method will present the purchase form on your site, using the given HTML element as the mount point, if provided, or as a modal if not.\n *\n * @param params - The parameters object to customise the purchase flow. Check {@link PurchaseParams}\n *\n * @returns a Promise for the customer and redemption info after the purchase is completed successfully.\n *\n * @throws\n *\n * {@link PurchasesError} if there is an error while performing the purchase. If the {@link PurchasesError.errorCode} is {@link ErrorCode.UserCancelledError}, the user cancelled the purchase.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "purchase(params: "
                },
                {
                  "kind": "Reference",
                  "text": "PurchaseParams",
                  "canonicalReference": "@revenuecat/purchases-js!PurchaseParams:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PurchaseResult",
                  "canonicalReference": "@revenuecat/purchases-js!PurchaseResult:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "purchase"
            },
            {
              "kind": "Method",
              "canonicalReference": "@revenuecat/purchases-js!Purchases#purchasePackage:member(1)",
              "docComment": "/**\n * Method to perform a purchase for a given package. You can obtain the package from {@link Purchases.getOfferings}. This method will present the purchase form on your site, using the given HTML element as the mount point, if provided, or as a modal if not.\n *\n * @deprecated\n *\n * - please use .purchase\n *\n * @param rcPackage - The package you want to purchase. Obtained from {@link Purchases.getOfferings}.\n *\n * @param customerEmail - The email of the user. If undefined, RevenueCat will ask the customer for their email.\n *\n * @param htmlTarget - The HTML element where the billing view should be added. If undefined, a new div will be created at the root of the page and appended to the body.\n *\n * @returns a Promise for the customer info after the purchase is completed successfully.\n *\n * @throws\n *\n * {@link PurchasesError} if there is an error while performing the purchase. If the {@link PurchasesError.errorCode} is {@link ErrorCode.UserCancelledError}, the user cancelled the purchase.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "purchasePackage(rcPackage: "
                },
                {
                  "kind": "Reference",
                  "text": "Package",
                  "canonicalReference": "@revenuecat/purchases-js!Package:interface"
                },
                {
                  "kind": "Content",
                  "text": ", customerEmail?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", htmlTarget?: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PurchaseResult",
                  "canonicalReference": "@revenuecat/purchases-js!PurchaseResult:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "rcPackage",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "customerEmail",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "htmlTarget",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "purchasePackage"
            },
            {
              "kind": "Method",
              "canonicalReference": "@revenuecat/purchases-js!Purchases#setAttributes:member(1)",
              "docComment": "/**\n * Sets attributes for the current user. Attributes are useful for storing additional, structured information on a customer that can be used elsewhere in the system. For example, you could store your customer's email address or additional system identifiers through the applicable reserved attributes, or store arbitrary facts like onboarding survey responses, feature usage, or other dimensions as custom attributes.\n *\n * Note: Unlike our mobile SDKs, the web SDK does not cache or retry sending attributes if the request fails. If the request fails, the attributes will not be saved and you will need to retry the operation.\n *\n * @param attributes - A dictionary of attributes to set for the current user.\n *\n * @throws\n *\n * {@link PurchasesError} if there is an error while setting the attributes or if the customer doesn't exist.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setAttributes(attributes: "
                },
                {
                  "kind": "Content",
                  "text": "{\n                [key: string | "
                },
                {
                  "kind": "Reference",
                  "text": "ReservedCustomerAttribute",
                  "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute:enum"
                },
                {
                  "kind": "Content",
                  "text": "]: string | null;\n            }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "attributes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setAttributes"
            },
            {
              "kind": "Method",
              "canonicalReference": "@revenuecat/purchases-js!Purchases.setLogHandler:member(1)",
              "docComment": "/**\n * Set a custom log handler to handle SDK log messages with your own logging system. If set to null, the SDK will use the default console logging.\n *\n * @param handler - LogHandler function or null to use default console logging.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static setLogHandler(handler: "
                },
                {
                  "kind": "Reference",
                  "text": "LogHandler",
                  "canonicalReference": "@revenuecat/purchases-js!LogHandler:type"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "handler",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setLogHandler"
            },
            {
              "kind": "Method",
              "canonicalReference": "@revenuecat/purchases-js!Purchases.setLogLevel:member(1)",
              "docComment": "/**\n * Set the log level. Logs of the given level and below will be printed in the console. Default is `LogLevel.Silent` so no logs will be printed in the console.\n *\n * @param logLevel - LogLevel to set.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static setLogLevel(logLevel: "
                },
                {
                  "kind": "Reference",
                  "text": "LogLevel",
                  "canonicalReference": "@revenuecat/purchases-js!LogLevel:enum"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "logLevel",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setLogLevel"
            },
            {
              "kind": "Method",
              "canonicalReference": "@revenuecat/purchases-js!Purchases.setPlatformInfo:member(1)",
              "docComment": "/**\n * Meant to be used by RevenueCat hybrids SDKS only.\n *\n * @experimental\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static setPlatformInfo(platformInfo: "
                },
                {
                  "kind": "Reference",
                  "text": "PlatformInfo",
                  "canonicalReference": "@revenuecat/purchases-js!PlatformInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "platformInfo",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setPlatformInfo"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!PurchasesConfig:interface",
          "docComment": "/**\n * Configuration object for initializing the Purchases SDK.\n *\n * @example\n * ```typescript\n * // Object-based configuration (recommended)\n * const purchases = Purchases.configure({\n *   apiKey: \"your_api_key\",\n *   appUserId: \"user_123\",\n *   httpConfig: { additionalHeaders: { \"Custom-Header\": \"value\" } },\n *   flags: { autoCollectUTMAsMetadata: true }\n * });\n *\n * // Legacy separate arguments (deprecated)\n * const purchases = Purchases.configure(\n *   \"your_api_key\",\n *   \"user_123\",\n *   { additionalHeaders: { \"Custom-Header\": \"value\" } },\n *   { autoCollectUTMAsMetadata: true }\n * );\n * ```\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface PurchasesConfig "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "PurchasesConfig",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!PurchasesConfig#apiKey:member",
              "docComment": "/**\n * RevenueCat API Key. Can be obtained from the RevenueCat dashboard.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "apiKey: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "apiKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!PurchasesConfig#appUserId:member",
              "docComment": "/**\n * Your unique id for identifying the user.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "appUserId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "appUserId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!PurchasesConfig#flags:member",
              "docComment": "/**\n * Advanced functionality configuration {@link FlagsConfig}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "flags?: "
                },
                {
                  "kind": "Reference",
                  "text": "FlagsConfig",
                  "canonicalReference": "@revenuecat/purchases-js!FlagsConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "flags",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!PurchasesConfig#httpConfig:member",
              "docComment": "/**\n * Advanced http configuration to customise the SDK usage {@link HttpConfig}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "httpConfig?: "
                },
                {
                  "kind": "Reference",
                  "text": "HttpConfig",
                  "canonicalReference": "@revenuecat/purchases-js!HttpConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "httpConfig",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@revenuecat/purchases-js!PurchasesError:class",
          "docComment": "/**\n * Error class for Purchases SDK. You should handle these errors and react accordingly in your app.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class PurchasesError extends "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "PurchasesError",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@revenuecat/purchases-js!PurchasesError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `PurchasesError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(\n               errorCode: "
                },
                {
                  "kind": "Reference",
                  "text": "ErrorCode",
                  "canonicalReference": "@revenuecat/purchases-js!ErrorCode:enum"
                },
                {
                  "kind": "Content",
                  "text": ", \n               message?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", \n               underlyingErrorMessage?: "
                },
                {
                  "kind": "Content",
                  "text": "string | null | undefined"
                },
                {
                  "kind": "Content",
                  "text": ", \n               extra?: "
                },
                {
                  "kind": "Reference",
                  "text": "PurchasesErrorExtra",
                  "canonicalReference": "@revenuecat/purchases-js!PurchasesErrorExtra:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "errorCode",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "underlyingErrorMessage",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "extra",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@revenuecat/purchases-js!PurchasesError#errorCode:member",
              "docComment": "/**\n * Error code for the error. This is useful to appropriately react to different error situations.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly errorCode: "
                },
                {
                  "kind": "Reference",
                  "text": "ErrorCode",
                  "canonicalReference": "@revenuecat/purchases-js!ErrorCode:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "errorCode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@revenuecat/purchases-js!PurchasesError#extra:member",
              "docComment": "/**\n * Contains extra information that is available in certain types of errors.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly extra?: "
                },
                {
                  "kind": "Reference",
                  "text": "PurchasesErrorExtra",
                  "canonicalReference": "@revenuecat/purchases-js!PurchasesErrorExtra:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "extra",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@revenuecat/purchases-js!PurchasesError#toString:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toString: "
                },
                {
                  "kind": "Content",
                  "text": "() => string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "toString",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@revenuecat/purchases-js!PurchasesError#underlyingErrorMessage:member",
              "docComment": "/**\n * Underlying error message. This provides more details on the error and can be useful for debugging and logging.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly underlyingErrorMessage?: "
                },
                {
                  "kind": "Content",
                  "text": "string | null | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "underlyingErrorMessage",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!PurchasesErrorExtra:interface",
          "docComment": "/**\n * Extra information that is available in certain types of errors.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface PurchasesErrorExtra "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "PurchasesErrorExtra",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!PurchasesErrorExtra#backendErrorCode:member",
              "docComment": "/**\n * If this is a RevenueCat backend error, the error code from the servers.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly backendErrorCode?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "backendErrorCode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!PurchasesErrorExtra#statusCode:member",
              "docComment": "/**\n * If this is a request error, the HTTP status code of the response.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly statusCode?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "statusCode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!RedemptionInfo:interface",
          "docComment": "/**\n * This object gives you access to the purchase redemption data when the purchase can be redeemed to a mobile user, like in the case of anonymous users.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface RedemptionInfo "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "RedemptionInfo",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!RedemptionInfo#redeemUrl:member",
              "docComment": "/**\n * The redeem url.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly redeemUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "redeemUrl",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute:enum",
          "docComment": "/**\n * Enumeration of reserved customer attributes.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum ReservedCustomerAttribute "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "ReservedCustomerAttribute",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.AdGroup:member",
              "docComment": "/**\n * The ad group of the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AdGroup = "
                },
                {
                  "kind": "Content",
                  "text": "\"$adGroup\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "AdGroup"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.AdId:member",
              "docComment": "/**\n * The Ad ID of the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AdId = "
                },
                {
                  "kind": "Content",
                  "text": "\"$ad\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "AdId"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.AdjustId:member",
              "docComment": "/**\n * The unique Adjust identifier for the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AdjustId = "
                },
                {
                  "kind": "Content",
                  "text": "\"$adjustId\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "AdjustId"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.AirshipChannelId:member",
              "docComment": "/**\n * The Airship channel ID of the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AirshipChannelId = "
                },
                {
                  "kind": "Content",
                  "text": "\"$airshipChannelId\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "AirshipChannelId"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.AmazonAdId:member",
              "docComment": "/**\n * The Amazon Advertising ID of the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AmazonAdId = "
                },
                {
                  "kind": "Content",
                  "text": "\"$amazonAdId\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "AmazonAdId"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.AmplitudeDeviceId:member",
              "docComment": "/**\n * The Amplitude device ID of the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AmplitudeDeviceId = "
                },
                {
                  "kind": "Content",
                  "text": "\"$amplitudeDeviceId\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "AmplitudeDeviceId"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.AmplitudeUserId:member",
              "docComment": "/**\n * The Amplitude user ID of the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AmplitudeUserId = "
                },
                {
                  "kind": "Content",
                  "text": "\"$amplitudeUserId\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "AmplitudeUserId"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.AndroidId:member",
              "docComment": "/**\n * The Android ID of the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AndroidId = "
                },
                {
                  "kind": "Content",
                  "text": "\"$androidId\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "AndroidId"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.APNSTokens:member",
              "docComment": "/**\n * Apple push notification tokens for the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "APNSTokens = "
                },
                {
                  "kind": "Content",
                  "text": "\"$apnsTokens\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "APNSTokens"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.AppleRefundHandlingPreference:member",
              "docComment": "/**\n * The Apple refund handling preference of the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AppleRefundHandlingPreference = "
                },
                {
                  "kind": "Content",
                  "text": "\"$appleRefundHandlingPreference\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "AppleRefundHandlingPreference"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.AppsflyerId:member",
              "docComment": "/**\n * Appsflyer Id. The unique Appsflyer identifier for the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AppsflyerId = "
                },
                {
                  "kind": "Content",
                  "text": "\"$appsflyerId\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "AppsflyerId"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.AppsflyerSharingFilter:member",
              "docComment": "/**\n * The AppsFlyer sharing filter of the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AppsflyerSharingFilter = "
                },
                {
                  "kind": "Content",
                  "text": "\"$appsflyerSharingFilter\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "AppsflyerSharingFilter"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.ATTConsentStatus:member",
              "docComment": "/**\n * Apple App Tracking Transparency consent status for the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ATTConsentStatus = "
                },
                {
                  "kind": "Content",
                  "text": "\"$attConsentStatus\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "ATTConsentStatus"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.BranchId:member",
              "docComment": "/**\n * The Branch ID of the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "BranchId = "
                },
                {
                  "kind": "Content",
                  "text": "\"$branchId\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "BranchId"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.BrazeAliasLabel:member",
              "docComment": "/**\n * The Braze 'alias_label' in User Alias Object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "BrazeAliasLabel = "
                },
                {
                  "kind": "Content",
                  "text": "\"$brazeAliasLabel\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "BrazeAliasLabel"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.BrazeAliasName:member",
              "docComment": "/**\n * The Braze 'alias_name' in User Alias Object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "BrazeAliasName = "
                },
                {
                  "kind": "Content",
                  "text": "\"$brazeAliasName\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "BrazeAliasName"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.Campaign:member",
              "docComment": "/**\n * The campaign of the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Campaign = "
                },
                {
                  "kind": "Content",
                  "text": "\"$campaign\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Campaign"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.ClevertapId:member",
              "docComment": "/**\n * The CleverTap ID of the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ClevertapId = "
                },
                {
                  "kind": "Content",
                  "text": "\"$clevertapId\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "ClevertapId"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.Creative:member",
              "docComment": "/**\n * The creative of the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Creative = "
                },
                {
                  "kind": "Content",
                  "text": "\"$creative\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Creative"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.CustomerioId:member",
              "docComment": "/**\n * The customer.io ID of the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CustomerioId = "
                },
                {
                  "kind": "Content",
                  "text": "\"$customerioId\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "CustomerioId"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.DeviceVersion:member",
              "docComment": "/**\n * The device version of the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DeviceVersion = "
                },
                {
                  "kind": "Content",
                  "text": "\"$deviceVersion\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "DeviceVersion"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.DisplayName:member",
              "docComment": "/**\n * The display name that should be used to reference the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DisplayName = "
                },
                {
                  "kind": "Content",
                  "text": "\"$displayName\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "DisplayName"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.Email:member",
              "docComment": "/**\n * The email address of the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Email = "
                },
                {
                  "kind": "Content",
                  "text": "\"$email\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Email"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.FbAnonId:member",
              "docComment": "/**\n * The Facebook anonymous ID of the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "FbAnonId = "
                },
                {
                  "kind": "Content",
                  "text": "\"$fbAnonId\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "FbAnonId"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.FCMTokens:member",
              "docComment": "/**\n * Google push notification tokens for the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "FCMTokens = "
                },
                {
                  "kind": "Content",
                  "text": "\"$fcmTokens\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "FCMTokens"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.FirebaseAppInstanceId:member",
              "docComment": "/**\n * The Firebase app instance ID of the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "FirebaseAppInstanceId = "
                },
                {
                  "kind": "Content",
                  "text": "\"$firebaseAppInstanceId\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "FirebaseAppInstanceId"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.GPSAdId:member",
              "docComment": "/**\n * The advertising ID that is provided by Google Play services for the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "GPSAdId = "
                },
                {
                  "kind": "Content",
                  "text": "\"$gpsAdId\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "GPSAdId"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.IDFA:member",
              "docComment": "/**\n * iOS advertising identifier UUID for the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "IDFA = "
                },
                {
                  "kind": "Content",
                  "text": "\"$idfa\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "IDFA"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.IDFV:member",
              "docComment": "/**\n * iOS vendor identifier UUID for the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "IDFV = "
                },
                {
                  "kind": "Content",
                  "text": "\"$idfv\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "IDFV"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.IntercomContactId:member",
              "docComment": "/**\n * The Intercom contact ID of the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "IntercomContactId = "
                },
                {
                  "kind": "Content",
                  "text": "\"$intercomContactId\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "IntercomContactId"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.IP:member",
              "docComment": "/**\n * The IP address of the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "IP = "
                },
                {
                  "kind": "Content",
                  "text": "\"$ip\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "IP"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.IterableCampaignId:member",
              "docComment": "/**\n * The Iterable campaign ID of the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "IterableCampaignId = "
                },
                {
                  "kind": "Content",
                  "text": "\"$iterableCampaignId\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "IterableCampaignId"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.IterableTemplateId:member",
              "docComment": "/**\n * The Iterable template ID of the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "IterableTemplateId = "
                },
                {
                  "kind": "Content",
                  "text": "\"$iterableTemplateId\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "IterableTemplateId"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.IterableUserId:member",
              "docComment": "/**\n * The Iterable user ID of the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "IterableUserId = "
                },
                {
                  "kind": "Content",
                  "text": "\"$iterableUserId\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "IterableUserId"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.Keyword:member",
              "docComment": "/**\n * The keyword of the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Keyword = "
                },
                {
                  "kind": "Content",
                  "text": "\"$keyword\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Keyword"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.KochavaDeviceId:member",
              "docComment": "/**\n * The unique Kochava device identifier of the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "KochavaDeviceId = "
                },
                {
                  "kind": "Content",
                  "text": "\"$kochavaDeviceId\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "KochavaDeviceId"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.MediaSource:member",
              "docComment": "/**\n * The media source of the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MediaSource = "
                },
                {
                  "kind": "Content",
                  "text": "\"$mediaSource\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "MediaSource"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.MixpanelDistinctId:member",
              "docComment": "/**\n * The Mixpanel distinct ID of the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MixpanelDistinctId = "
                },
                {
                  "kind": "Content",
                  "text": "\"$mixpanelDistinctId\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "MixpanelDistinctId"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.MparticleId:member",
              "docComment": "/**\n * The unique mParticle user identifier (mpid).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MparticleId = "
                },
                {
                  "kind": "Content",
                  "text": "\"$mparticleId\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "MparticleId"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.OnesignalId:member",
              "docComment": "/**\n * The OneSignal Player Id for the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "OnesignalId = "
                },
                {
                  "kind": "Content",
                  "text": "\"$onesignalId\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "OnesignalId"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.OnesignalUserId:member",
              "docComment": "/**\n * The OneSignal user ID of the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "OnesignalUserId = "
                },
                {
                  "kind": "Content",
                  "text": "\"$onesignalUserId\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "OnesignalUserId"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.PhoneNumber:member",
              "docComment": "/**\n * The phone number of the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PhoneNumber = "
                },
                {
                  "kind": "Content",
                  "text": "\"$phoneNumber\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "PhoneNumber"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.PosthogUserId:member",
              "docComment": "/**\n * The PostHog user ID of the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PosthogUserId = "
                },
                {
                  "kind": "Content",
                  "text": "\"$posthogUserId\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "PosthogUserId"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.SegmentId:member",
              "docComment": "/**\n * The segment ID of the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SegmentId = "
                },
                {
                  "kind": "Content",
                  "text": "\"$segmentId\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "SegmentId"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.TelemetryDeckAppId:member",
              "docComment": "/**\n * The Telemetry Deck app ID of the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "TelemetryDeckAppId = "
                },
                {
                  "kind": "Content",
                  "text": "\"$telemetryDeckAppId\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "TelemetryDeckAppId"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.TelemetryDeckUserId:member",
              "docComment": "/**\n * The Telemetry Deck user ID of the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "TelemetryDeckUserId = "
                },
                {
                  "kind": "Content",
                  "text": "\"$telemetryDeckUserId\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "TelemetryDeckUserId"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ReservedCustomerAttribute.TenjinId:member",
              "docComment": "/**\n * The Tenjin ID of the customer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "TenjinId = "
                },
                {
                  "kind": "Content",
                  "text": "\"$tenjinId\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "TenjinId"
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@revenuecat/purchases-js!Store:type",
          "docComment": "/**\n * The store where the user originally subscribed.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Store = "
            },
            {
              "kind": "Content",
              "text": "\"app_store\" | \"mac_app_store\" | \"play_store\" | \"amazon\" | \"stripe\" | \"rc_billing\" | \"promotional\" | \"paddle\" | \"unknown\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "Store",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!StoreTransaction:interface",
          "docComment": "/**\n * Represents a transaction made in the store.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface StoreTransaction "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "StoreTransaction",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!StoreTransaction#productIdentifier:member",
              "docComment": "/**\n * The identifier of the product purchased in the transaction.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly productIdentifier: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "productIdentifier",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!StoreTransaction#purchaseDate:member",
              "docComment": "/**\n * The date when the transaction was made.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly purchaseDate: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "purchaseDate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!StoreTransaction#storeTransactionId:member",
              "docComment": "/**\n * The unique identifier for the store transaction.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly storeTransactionId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "storeTransactionId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!SubscriptionInfo:interface",
          "docComment": "/**\n * Subscription purchases of the Customer.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface SubscriptionInfo "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "SubscriptionInfo",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!SubscriptionInfo#billingIssuesDetectedAt:member",
              "docComment": "/**\n * Date when RevenueCat detected any billing issues with this subscription. If and when the billing issue gets resolved, this field is set to null. Note the subscription may still be active, check the {@link SubscriptionInfo.expiresDate} attribute.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly billingIssuesDetectedAt: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "billingIssuesDetectedAt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!SubscriptionInfo#expiresDate:member",
              "docComment": "/**\n * Date when the subscription expires/expired\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly expiresDate: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "expiresDate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!SubscriptionInfo#gracePeriodExpiresDate:member",
              "docComment": "/**\n * Date when any grace period for this subscription expires/expired. null if the customer has never been in a grace period.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly gracePeriodExpiresDate: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "gracePeriodExpiresDate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!SubscriptionInfo#isActive:member",
              "docComment": "/**\n * Whether the subscription is currently active (at the time this object was obtained).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly isActive: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isActive",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!SubscriptionInfo#isSandbox:member",
              "docComment": "/**\n * Whether or not the purchase was made in sandbox mode.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly isSandbox: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isSandbox",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!SubscriptionInfo#originalPurchaseDate:member",
              "docComment": "/**\n * Date when this subscription first started. This property does not update with renewals. This property also does not update for product changes within a subscription group or re-subscriptions by lapsed subscribers.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly originalPurchaseDate: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "originalPurchaseDate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!SubscriptionInfo#ownershipType:member",
              "docComment": "/**\n * How the Customer received access to this subscription: - \"PURCHASED\": The customer bought the subscription. - \"FAMILY_SHARED\": The customer has access to the product via their family.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly ownershipType: "
                },
                {
                  "kind": "Reference",
                  "text": "OwnershipType",
                  "canonicalReference": "@revenuecat/purchases-js!OwnershipType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ownershipType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!SubscriptionInfo#periodType:member",
              "docComment": "/**\n * Type of the current subscription period: - \"normal\": The product is in a normal period (default) - \"trial\": The product is in a free trial period - \"intro\": The product is in an introductory pricing period - \"prepaid\": The product is in a prepaid pricing period\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly periodType: "
                },
                {
                  "kind": "Reference",
                  "text": "PeriodType",
                  "canonicalReference": "@revenuecat/purchases-js!PeriodType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "periodType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!SubscriptionInfo#productIdentifier:member",
              "docComment": "/**\n * The product identifier.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly productIdentifier: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "productIdentifier",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!SubscriptionInfo#purchaseDate:member",
              "docComment": "/**\n * Date when the last subscription period started.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly purchaseDate: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "purchaseDate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!SubscriptionInfo#refundedAt:member",
              "docComment": "/**\n * Date when RevenueCat detected a refund of this subscription.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly refundedAt: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "refundedAt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!SubscriptionInfo#store:member",
              "docComment": "/**\n * Store where the subscription was purchased.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly store: "
                },
                {
                  "kind": "Reference",
                  "text": "Store",
                  "canonicalReference": "@revenuecat/purchases-js!Store:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "store",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!SubscriptionInfo#storeTransactionId:member",
              "docComment": "/**\n * The transaction id in the store of the subscription.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly storeTransactionId: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "storeTransactionId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!SubscriptionInfo#unsubscribeDetectedAt:member",
              "docComment": "/**\n * Date when RevenueCat detected that auto-renewal was turned off for this subscription. Note the subscription may still be active, check the {@link SubscriptionInfo.expiresDate} attribute.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly unsubscribeDetectedAt: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "unsubscribeDetectedAt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!SubscriptionInfo#willRenew:member",
              "docComment": "/**\n * Whether the subscription will renew at the next billing period.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly willRenew: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "willRenew",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!SubscriptionOption:interface",
          "docComment": "/**\n * Represents a possible option to purchase a subscription product.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface SubscriptionOption extends "
            },
            {
              "kind": "Reference",
              "text": "PurchaseOption",
              "canonicalReference": "@revenuecat/purchases-js!PurchaseOption:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "SubscriptionOption",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!SubscriptionOption#base:member",
              "docComment": "/**\n * The base phase for a SubscriptionOption, represents the price that the customer will be charged after all the discounts have been consumed and the period at which it will renew.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly base: "
                },
                {
                  "kind": "Reference",
                  "text": "PricingPhase",
                  "canonicalReference": "@revenuecat/purchases-js!PricingPhase:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "base",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!SubscriptionOption#introPrice:member",
              "docComment": "/**\n * The introductory price period for this subscription option if available.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly introPrice: "
                },
                {
                  "kind": "Reference",
                  "text": "PricingPhase",
                  "canonicalReference": "@revenuecat/purchases-js!PricingPhase:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "introPrice",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!SubscriptionOption#trial:member",
              "docComment": "/**\n * The trial information for this subscription option if available.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly trial: "
                },
                {
                  "kind": "Reference",
                  "text": "PricingPhase",
                  "canonicalReference": "@revenuecat/purchases-js!PricingPhase:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "trial",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!TargetingContext:interface",
          "docComment": "/**\n * Contains information about the targeting context used to obtain an object.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface TargetingContext "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "TargetingContext",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!TargetingContext#revision:member",
              "docComment": "/**\n * The revision of the targeting used to obtain this object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly revision: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "revision",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!TargetingContext#ruleId:member",
              "docComment": "/**\n * The rule id from the targeting used to obtain this object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly ruleId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ruleId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@revenuecat/purchases-js!UninitializedPurchasesError:class",
          "docComment": "/**\n * Error indicating that the SDK was accessed before it was initialized.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class UninitializedPurchasesError extends "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "UninitializedPurchasesError",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@revenuecat/purchases-js!UninitializedPurchasesError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `UninitializedPurchasesError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": []
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!VirtualCurrencies:interface",
          "docComment": "/**\n * The VirtualCurrencies object contains all the virtual currencies associated to the user.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface VirtualCurrencies "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "VirtualCurrencies",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!VirtualCurrencies#all:member",
              "docComment": "/**\n * Map of all {@link VirtualCurrency} objects keyed by virtual currency code.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly all: "
                },
                {
                  "kind": "Content",
                  "text": "{\n                   [key: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "VirtualCurrency",
                  "canonicalReference": "@revenuecat/purchases-js!VirtualCurrency:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n               }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "all",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!VirtualCurrency:interface",
          "docComment": "/**\n * The VirtualCurrency object represents information about a virtual currency in the app. Use this object to access information about a virtual currency, such as its current balance.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface VirtualCurrency "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "VirtualCurrency",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!VirtualCurrency#balance:member",
              "docComment": "/**\n * The virtual currency's balance.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly balance: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "balance",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!VirtualCurrency#code:member",
              "docComment": "/**\n * The virtual currency's code.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly code: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "code",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!VirtualCurrency#name:member",
              "docComment": "/**\n * The virtual currency's name.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!VirtualCurrency#serverDescription:member",
              "docComment": "/**\n * The virtual currency's description defined in the RevenueCat dashboard.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly serverDescription: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "serverDescription",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        }
      ]
    }
  ]
}
