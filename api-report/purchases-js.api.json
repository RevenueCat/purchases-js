{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.43.0",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "projectFolderUrl": "http://github.com/RevenueCat/purchases-js/src",
  "kind": "Package",
  "canonicalReference": "@revenuecat/purchases-js!",
  "docComment": "",
  "name": "@revenuecat/purchases-js",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@revenuecat/purchases-js!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!CustomerInfo:interface",
          "docComment": "/**\n * Type containing all information regarding the customer.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface CustomerInfo "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "CustomerInfo",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!CustomerInfo#activeSubscriptions:member",
              "docComment": "/**\n * Set of active subscription product identifiers.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly activeSubscriptions: "
                },
                {
                  "kind": "Reference",
                  "text": "Set",
                  "canonicalReference": "!Set:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "activeSubscriptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!CustomerInfo#allExpirationDatesByProduct:member",
              "docComment": "/**\n * Map of productIds to expiration dates.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly allExpirationDatesByProduct: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [productIdentifier: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "allExpirationDatesByProduct",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!CustomerInfo#allPurchaseDatesByProduct:member",
              "docComment": "/**\n * Map of productIds to purchase dates.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly allPurchaseDatesByProduct: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [productIdentifier: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "allPurchaseDatesByProduct",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!CustomerInfo#entitlements:member",
              "docComment": "/**\n * Entitlements attached to this customer info.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly entitlements: "
                },
                {
                  "kind": "Reference",
                  "text": "EntitlementInfos",
                  "canonicalReference": "@revenuecat/purchases-js!EntitlementInfos:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "entitlements",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!CustomerInfo#firstSeenDate:member",
              "docComment": "/**\n * The date this user was first seen in RevenueCat.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly firstSeenDate: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "firstSeenDate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!CustomerInfo#managementURL:member",
              "docComment": "/**\n * URL to manage the active subscription of the user. If this user has an active RC Billing subscription, a link to the management page. If this user has an active iOS subscription, this will point to the App Store. If the user has an active Play Store subscription it will point there. If there are no active subscriptions it will be null.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly managementURL: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "managementURL",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!CustomerInfo#originalAppUserId:member",
              "docComment": "/**\n * The original App User Id recorded for this user.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly originalAppUserId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "originalAppUserId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!CustomerInfo#originalPurchaseDate:member",
              "docComment": "/**\n * The purchase date for the version of the application when the user bought the app. Use this for grandfathering users when migrating to subscriptions. This can be null.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly originalPurchaseDate: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "originalPurchaseDate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!CustomerInfo#requestDate:member",
              "docComment": "/**\n * Date when this info was requested.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly requestDate: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "requestDate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!EntitlementInfo:interface",
          "docComment": "/**\n * This object gives you access to all the information about the status of a user's entitlements.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface EntitlementInfo "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "EntitlementInfo",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!EntitlementInfo#billingIssueDetectedAt:member",
              "docComment": "/**\n * The date a billing issue was detected. Can be `null` if there is no billing issue or an issue has been resolved. Note: Entitlement may still be active even if there is a billing issue. Check the `isActive` property.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly billingIssueDetectedAt: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "billingIssueDetectedAt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!EntitlementInfo#expirationDate:member",
              "docComment": "/**\n * The expiration date for the entitlement, can be `null` for lifetime access. If the {@link EntitlementInfo.periodType} is `trial`, this is the trial expiration date.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly expirationDate: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "expirationDate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!EntitlementInfo#identifier:member",
              "docComment": "/**\n * The entitlement identifier configured in the RevenueCat dashboard.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly identifier: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "identifier",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!EntitlementInfo#isActive:member",
              "docComment": "/**\n * True if the user has access to the entitlement.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly isActive: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isActive",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!EntitlementInfo#isSandbox:member",
              "docComment": "/**\n * False if this entitlement is unlocked via a production purchase.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly isSandbox: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isSandbox",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!EntitlementInfo#latestPurchaseDate:member",
              "docComment": "/**\n * The latest purchase or renewal date for the entitlement.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly latestPurchaseDate: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "latestPurchaseDate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!EntitlementInfo#originalPurchaseDate:member",
              "docComment": "/**\n * The first date this entitlement was purchased.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly originalPurchaseDate: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "originalPurchaseDate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!EntitlementInfo#periodType:member",
              "docComment": "/**\n * The last period type this entitlement was in.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly periodType: "
                },
                {
                  "kind": "Reference",
                  "text": "PeriodType",
                  "canonicalReference": "@revenuecat/purchases-js!PeriodType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "periodType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!EntitlementInfo#productIdentifier:member",
              "docComment": "/**\n * The product identifier that unlocked this entitlement.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly productIdentifier: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "productIdentifier",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!EntitlementInfo#store:member",
              "docComment": "/**\n * The store where this entitlement was unlocked from.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly store: "
                },
                {
                  "kind": "Reference",
                  "text": "Store",
                  "canonicalReference": "@revenuecat/purchases-js!Store:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "store",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!EntitlementInfo#unsubscribeDetectedAt:member",
              "docComment": "/**\n * The date an unsubscribe was detected. Can be `null`. Note: Entitlement may still be active even if user has unsubscribed. Check the {@link EntitlementInfo.isActive} property.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly unsubscribeDetectedAt: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "unsubscribeDetectedAt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!EntitlementInfo#willRenew:member",
              "docComment": "/**\n * True if the underlying subscription is set to renew at the end of the billing period (expirationDate). Will always be True if entitlement is for lifetime access.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly willRenew: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "willRenew",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!EntitlementInfos:interface",
          "docComment": "/**\n * Contains all the entitlements associated to the user.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface EntitlementInfos "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "EntitlementInfos",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!EntitlementInfos#active:member",
              "docComment": "/**\n * Dictionary of active {@link EntitlementInfo} keyed by entitlement identifier.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly active: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [entitlementId: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "EntitlementInfo",
                  "canonicalReference": "@revenuecat/purchases-js!EntitlementInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "active",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!EntitlementInfos#all:member",
              "docComment": "/**\n * Map of all {@link EntitlementInfo} objects (active and inactive) keyed by entitlement identifier.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly all: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [entitlementId: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "EntitlementInfo",
                  "canonicalReference": "@revenuecat/purchases-js!EntitlementInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "all",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "@revenuecat/purchases-js!ErrorCode:enum",
          "docComment": "/**\n * Error codes for the Purchases SDK.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum ErrorCode "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "ErrorCode",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.ConfigurationError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ConfigurationError = "
                },
                {
                  "kind": "Content",
                  "text": "23"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "ConfigurationError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.CustomerInfoError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CustomerInfoError = "
                },
                {
                  "kind": "Content",
                  "text": "28"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "CustomerInfoError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.EmptySubscriberAttributesError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "EmptySubscriberAttributesError = "
                },
                {
                  "kind": "Content",
                  "text": "25"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "EmptySubscriberAttributesError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.IneligibleError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "IneligibleError = "
                },
                {
                  "kind": "Content",
                  "text": "18"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "IneligibleError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.InsufficientPermissionsError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "InsufficientPermissionsError = "
                },
                {
                  "kind": "Content",
                  "text": "19"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "InsufficientPermissionsError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.InvalidAppleSubscriptionKeyError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "InvalidAppleSubscriptionKeyError = "
                },
                {
                  "kind": "Content",
                  "text": "17"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "InvalidAppleSubscriptionKeyError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.InvalidAppUserIdError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "InvalidAppUserIdError = "
                },
                {
                  "kind": "Content",
                  "text": "14"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "InvalidAppUserIdError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.InvalidCredentialsError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "InvalidCredentialsError = "
                },
                {
                  "kind": "Content",
                  "text": "11"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "InvalidCredentialsError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.InvalidReceiptError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "InvalidReceiptError = "
                },
                {
                  "kind": "Content",
                  "text": "8"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "InvalidReceiptError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.InvalidSubscriberAttributesError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "InvalidSubscriberAttributesError = "
                },
                {
                  "kind": "Content",
                  "text": "21"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "InvalidSubscriberAttributesError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.LogOutWithAnonymousUserError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "LogOutWithAnonymousUserError = "
                },
                {
                  "kind": "Content",
                  "text": "22"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "LogOutWithAnonymousUserError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.MissingReceiptFileError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MissingReceiptFileError = "
                },
                {
                  "kind": "Content",
                  "text": "9"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "MissingReceiptFileError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.NetworkError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "NetworkError = "
                },
                {
                  "kind": "Content",
                  "text": "10"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "NetworkError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.OperationAlreadyInProgressError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "OperationAlreadyInProgressError = "
                },
                {
                  "kind": "Content",
                  "text": "15"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "OperationAlreadyInProgressError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.PaymentPendingError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PaymentPendingError = "
                },
                {
                  "kind": "Content",
                  "text": "20"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "PaymentPendingError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.ProductAlreadyPurchasedError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ProductAlreadyPurchasedError = "
                },
                {
                  "kind": "Content",
                  "text": "6"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "ProductAlreadyPurchasedError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.ProductNotAvailableForPurchaseError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ProductNotAvailableForPurchaseError = "
                },
                {
                  "kind": "Content",
                  "text": "5"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "ProductNotAvailableForPurchaseError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.PurchaseInvalidError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PurchaseInvalidError = "
                },
                {
                  "kind": "Content",
                  "text": "4"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "PurchaseInvalidError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.PurchaseNotAllowedError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PurchaseNotAllowedError = "
                },
                {
                  "kind": "Content",
                  "text": "3"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "PurchaseNotAllowedError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.ReceiptAlreadyInUseError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ReceiptAlreadyInUseError = "
                },
                {
                  "kind": "Content",
                  "text": "7"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "ReceiptAlreadyInUseError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.SignatureVerificationError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SignatureVerificationError = "
                },
                {
                  "kind": "Content",
                  "text": "36"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "SignatureVerificationError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.StoreProblemError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "StoreProblemError = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "StoreProblemError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.UnexpectedBackendResponseError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "UnexpectedBackendResponseError = "
                },
                {
                  "kind": "Content",
                  "text": "12"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "UnexpectedBackendResponseError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.UnknownBackendError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "UnknownBackendError = "
                },
                {
                  "kind": "Content",
                  "text": "16"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "UnknownBackendError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.UnknownError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "UnknownError = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "UnknownError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.UnsupportedError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "UnsupportedError = "
                },
                {
                  "kind": "Content",
                  "text": "24"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "UnsupportedError"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!ErrorCode.UserCancelledError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "UserCancelledError = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "UserCancelledError"
            }
          ]
        },
        {
          "kind": "Enum",
          "canonicalReference": "@revenuecat/purchases-js!LogLevel:enum",
          "docComment": "/**\n * Possible levels to log in the console.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum LogLevel "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "LogLevel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!LogLevel.Debug:member",
              "docComment": "/**\n * Debug, info, warnings, and errors will be shown in the console.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Debug = "
                },
                {
                  "kind": "Content",
                  "text": "4"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Debug"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!LogLevel.Error:member",
              "docComment": "/**\n * Only errors will be shown in the console.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Error = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Error"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!LogLevel.Info:member",
              "docComment": "/**\n * Only info, warnings, and errors will be shown in the console.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Info = "
                },
                {
                  "kind": "Content",
                  "text": "3"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Info"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!LogLevel.Silent:member",
              "docComment": "/**\n * No logs will be shown in the console.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Silent = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Silent"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!LogLevel.Verbose:member",
              "docComment": "/**\n * All logs will be shown in the console.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Verbose = "
                },
                {
                  "kind": "Content",
                  "text": "5"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Verbose"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!LogLevel.Warn:member",
              "docComment": "/**\n * Only warnings and errors will be shown in the console.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Warn = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Warn"
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!Offering:interface",
          "docComment": "/**\n * An offering is a collection of {@link Package} available for the user to purchase. For more info see https://docs.revenuecat.com/docs/entitlements\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface Offering "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "Offering",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Offering#annual:member",
              "docComment": "/**\n * Annual package type configured in the RevenueCat dashboard, if available.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly annual: "
                },
                {
                  "kind": "Reference",
                  "text": "Package",
                  "canonicalReference": "@revenuecat/purchases-js!Package:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "annual",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Offering#availablePackages:member",
              "docComment": "/**\n * A list of all the packages available for purchase.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly availablePackages: "
                },
                {
                  "kind": "Reference",
                  "text": "Package",
                  "canonicalReference": "@revenuecat/purchases-js!Package:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "availablePackages",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Offering#identifier:member",
              "docComment": "/**\n * Unique identifier defined in RevenueCat dashboard.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly identifier: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "identifier",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Offering#lifetime:member",
              "docComment": "/**\n * Lifetime package type configured in the RevenueCat dashboard, if available.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly lifetime: "
                },
                {
                  "kind": "Reference",
                  "text": "Package",
                  "canonicalReference": "@revenuecat/purchases-js!Package:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "lifetime",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Offering#metadata:member",
              "docComment": "/**\n * Offering metadata defined in RevenueCat dashboard.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly metadata: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: string]: unknown;\n    } | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "metadata",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Offering#monthly:member",
              "docComment": "/**\n * Monthly package type configured in the RevenueCat dashboard, if available.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly monthly: "
                },
                {
                  "kind": "Reference",
                  "text": "Package",
                  "canonicalReference": "@revenuecat/purchases-js!Package:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "monthly",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Offering#packagesById:member",
              "docComment": "/**\n * A map of all the packages available for purchase keyed by package ID.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly packagesById: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "Package",
                  "canonicalReference": "@revenuecat/purchases-js!Package:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "packagesById",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Offering#serverDescription:member",
              "docComment": "/**\n * Offering description defined in RevenueCat dashboard.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly serverDescription: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "serverDescription",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Offering#sixMonth:member",
              "docComment": "/**\n * Six month package type configured in the RevenueCat dashboard, if available.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly sixMonth: "
                },
                {
                  "kind": "Reference",
                  "text": "Package",
                  "canonicalReference": "@revenuecat/purchases-js!Package:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "sixMonth",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Offering#threeMonth:member",
              "docComment": "/**\n * Three month package type configured in the RevenueCat dashboard, if available.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly threeMonth: "
                },
                {
                  "kind": "Reference",
                  "text": "Package",
                  "canonicalReference": "@revenuecat/purchases-js!Package:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "threeMonth",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Offering#twoMonth:member",
              "docComment": "/**\n * Two month package type configured in the RevenueCat dashboard, if available.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly twoMonth: "
                },
                {
                  "kind": "Reference",
                  "text": "Package",
                  "canonicalReference": "@revenuecat/purchases-js!Package:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "twoMonth",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Offering#weekly:member",
              "docComment": "/**\n * Weekly package type configured in the RevenueCat dashboard, if available.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly weekly: "
                },
                {
                  "kind": "Reference",
                  "text": "Package",
                  "canonicalReference": "@revenuecat/purchases-js!Package:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "weekly",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!Offerings:interface",
          "docComment": "/**\n * This class contains all the offerings configured in RevenueCat dashboard. For more info see https://docs.revenuecat.com/docs/entitlements\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface Offerings "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "Offerings",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Offerings#all:member",
              "docComment": "/**\n * Dictionary of all {@link Offering} objects keyed by their identifier.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly all: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [offeringId: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "Offering",
                  "canonicalReference": "@revenuecat/purchases-js!Offering:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "all",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Offerings#current:member",
              "docComment": "/**\n * Current offering configured in the RevenueCat dashboard.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly current: "
                },
                {
                  "kind": "Reference",
                  "text": "Offering",
                  "canonicalReference": "@revenuecat/purchases-js!Offering:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "current",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!Package:interface",
          "docComment": "/**\n * Contains information about the product available for the user to purchase. For more info see https://docs.revenuecat.com/docs/entitlements\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface Package "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "Package",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Package#identifier:member",
              "docComment": "/**\n * Unique identifier for this package. Can be one a predefined package type or a custom one.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly identifier: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "identifier",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Package#packageType:member",
              "docComment": "/**\n * The type of package.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly packageType: "
                },
                {
                  "kind": "Reference",
                  "text": "PackageType",
                  "canonicalReference": "@revenuecat/purchases-js!PackageType:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "packageType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Package#rcBillingProduct:member",
              "docComment": "/**\n * The {@link Product} assigned to this package.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly rcBillingProduct: "
                },
                {
                  "kind": "Reference",
                  "text": "Product",
                  "canonicalReference": "@revenuecat/purchases-js!Product:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "rcBillingProduct",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "@revenuecat/purchases-js!PackageType:enum",
          "docComment": "/**\n * Enumeration of all possible Package types.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum PackageType "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "PackageType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!PackageType.Annual:member",
              "docComment": "/**\n * A package configured with the predefined annual identifier.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Annual = "
                },
                {
                  "kind": "Content",
                  "text": "\"$rc_annual\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Annual"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!PackageType.Custom:member",
              "docComment": "/**\n * A package that was defined with a custom identifier.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Custom = "
                },
                {
                  "kind": "Content",
                  "text": "\"custom\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Custom"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!PackageType.Lifetime:member",
              "docComment": "/**\n * A package configured with the predefined lifetime identifier.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Lifetime = "
                },
                {
                  "kind": "Content",
                  "text": "\"$rc_lifetime\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Lifetime"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!PackageType.Monthly:member",
              "docComment": "/**\n * A package configured with the predefined monthly identifier.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Monthly = "
                },
                {
                  "kind": "Content",
                  "text": "\"$rc_monthly\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Monthly"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!PackageType.SixMonth:member",
              "docComment": "/**\n * A package configured with the predefined six month identifier.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SixMonth = "
                },
                {
                  "kind": "Content",
                  "text": "\"$rc_six_month\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "SixMonth"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!PackageType.ThreeMonth:member",
              "docComment": "/**\n * A package configured with the predefined three month identifier.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ThreeMonth = "
                },
                {
                  "kind": "Content",
                  "text": "\"$rc_three_month\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "ThreeMonth"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!PackageType.TwoMonth:member",
              "docComment": "/**\n * A package configured with the predefined two month identifier.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "TwoMonth = "
                },
                {
                  "kind": "Content",
                  "text": "\"$rc_two_month\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "TwoMonth"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!PackageType.Unknown:member",
              "docComment": "/**\n * A package that was defined with an unrecognized RC identifier.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Unknown = "
                },
                {
                  "kind": "Content",
                  "text": "\"unknown\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Unknown"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@revenuecat/purchases-js!PackageType.Weekly:member",
              "docComment": "/**\n * A package configured with the predefined weekly identifier.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Weekly = "
                },
                {
                  "kind": "Content",
                  "text": "\"$rc_weekly\""
                }
              ],
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "name": "Weekly"
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@revenuecat/purchases-js!PeriodType:type",
          "docComment": "/**\n * Supported period types for an entitlement. - \"normal\" If the entitlement is not under an introductory or trial period. - \"intro\" If the entitlement is under an introductory period. - \"trial\" If the entitlement is under a trial period.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PeriodType = "
            },
            {
              "kind": "Content",
              "text": "\"normal\" | \"intro\" | \"trial\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "PeriodType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!Price:interface",
          "docComment": "/**\n * Price information for a product.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface Price "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "Price",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Price#amount:member",
              "docComment": "/**\n * Price in full units of the currency.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly amount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "amount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Price#currency:member",
              "docComment": "/**\n * Returns ISO 4217 currency code for price. For example, if price is specified in British pounds sterling, currency is \"GBP\". If currency code cannot be determined, currency symbol is returned.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly currency: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "currency",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Price#formattedPrice:member",
              "docComment": "/**\n * Formatted price string including price and currency.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly formattedPrice: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "formattedPrice",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!PricingPhase:interface",
          "docComment": "/**\n * Represents the price and duration information for a phase of the purchase option.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface PricingPhase "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "PricingPhase",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!PricingPhase#cycleCount:member",
              "docComment": "/**\n * The number of cycles this option's price repeats. I.e. 2 subscription cycles, 0 if not applicable.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly cycleCount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "cycleCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!PricingPhase#periodDuration:member",
              "docComment": "/**\n * The duration of the purchase option price in ISO 8601 format. For applicable options (trials, initial/promotional prices), otherwise null\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly periodDuration: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "periodDuration",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!PricingPhase#price:member",
              "docComment": "/**\n * The price for the purchase option. Null in case of trials.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly price: "
                },
                {
                  "kind": "Reference",
                  "text": "Price",
                  "canonicalReference": "@revenuecat/purchases-js!Price:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "price",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!Product:interface",
          "docComment": "/**\n * Represents product's listing details.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface Product "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "Product",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Product#currentPrice:member",
              "docComment": "/**\n * Price of the product. In the case of subscriptions, this will match the default option's base phase price.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly currentPrice: "
                },
                {
                  "kind": "Reference",
                  "text": "Price",
                  "canonicalReference": "@revenuecat/purchases-js!Price:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "currentPrice",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Product#defaultSubscriptionOption:member",
              "docComment": "/**\n * The default subscription option for this product. Null if no subscription options are available like in the case of consumables and non-consumables.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly defaultSubscriptionOption: "
                },
                {
                  "kind": "Reference",
                  "text": "SubscriptionOption",
                  "canonicalReference": "@revenuecat/purchases-js!SubscriptionOption:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "defaultSubscriptionOption",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Product#displayName:member",
              "docComment": "/**\n * Name of the product.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly displayName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "displayName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Product#identifier:member",
              "docComment": "/**\n * The product ID.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly identifier: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "identifier",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Product#normalPeriodDuration:member",
              "docComment": "/**\n * The period duration for a subscription product. This will match the default option's base phase period duration.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly normalPeriodDuration: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "normalPeriodDuration",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Product#presentedOfferingIdentifier:member",
              "docComment": "/**\n * The offering ID used to obtain this product.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly presentedOfferingIdentifier: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "presentedOfferingIdentifier",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!Product#subscriptionOptions:member",
              "docComment": "/**\n * A dictionary with all the possible subscription options available for this product. Each key contains the key to be used when executing a purchase.\n *\n * If retrieved through getOfferings the offers are only the ones the customer is entitled to.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly subscriptionOptions: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [optionId: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "SubscriptionOption",
                  "canonicalReference": "@revenuecat/purchases-js!SubscriptionOption:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "subscriptionOptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!PurchaseOption:interface",
          "docComment": "/**\n * Represents a possible option to purchase a product.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface PurchaseOption "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "PurchaseOption",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!PurchaseOption#id:member",
              "docComment": "/**\n * The unique id for a purchase option\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!PurchaseParams:interface",
          "docComment": "/**\n * Parameters used to customise the purchase flow when invoking the `.purchase` method.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface PurchaseParams "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "PurchaseParams",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!PurchaseParams#customerEmail:member",
              "docComment": "/**\n * The email of the user. If undefined, RevenueCat will ask the customer for their email.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "customerEmail?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "customerEmail",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!PurchaseParams#htmlTarget:member",
              "docComment": "/**\n * The HTML element where the billing view should be added. If undefined, a new div will be created at the root of the page and appended to the body.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "htmlTarget?: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "htmlTarget",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!PurchaseParams#purchaseOption:member",
              "docComment": "/**\n * The option to be used for this purchase. If not specified or null the default one will be used.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "purchaseOption?: "
                },
                {
                  "kind": "Reference",
                  "text": "PurchaseOption",
                  "canonicalReference": "@revenuecat/purchases-js!PurchaseOption:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "purchaseOption",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!PurchaseParams#rcPackage:member",
              "docComment": "/**\n * The package you want to purchase. Obtained from {@link Purchases.getOfferings}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rcPackage: "
                },
                {
                  "kind": "Reference",
                  "text": "Package",
                  "canonicalReference": "@revenuecat/purchases-js!Package:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "rcPackage",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@revenuecat/purchases-js!Purchases:class",
          "docComment": "/**\n * Entry point for Purchases SDK. It should be instantiated as soon as your app is started. Only one instance of Purchases should be instantiated at a time!\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Purchases "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Purchases",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@revenuecat/purchases-js!Purchases#changeUser:member(1)",
              "docComment": "/**\n * Change the current app user id. Returns the customer info for the new user id.\n *\n * @param newAppUserId - The user id to change to.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "changeUser(newAppUserId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CustomerInfo",
                  "canonicalReference": "@revenuecat/purchases-js!CustomerInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "newAppUserId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "changeUser"
            },
            {
              "kind": "Method",
              "canonicalReference": "@revenuecat/purchases-js!Purchases#close:member(1)",
              "docComment": "/**\n * Closes the Purchases instance. You should never have to do this normally.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "close(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "close"
            },
            {
              "kind": "Method",
              "canonicalReference": "@revenuecat/purchases-js!Purchases.configure:member(1)",
              "docComment": "/**\n * Configures the Purchases SDK. This should be called as soon as your app has a unique user id for your user. You should only call this once, and keep the returned instance around for use throughout your application.\n *\n * @param apiKey - RevenueCat API Key. Can be obtained from the RevenueCat dashboard.\n *\n * @param appUserId - Your unique id for identifying the user.\n *\n * @throws\n *\n * {@link PurchasesError} if the API key or user id are invalid.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static configure(apiKey: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", appUserId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Purchases",
                  "canonicalReference": "@revenuecat/purchases-js!Purchases:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "apiKey",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "appUserId",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "configure"
            },
            {
              "kind": "Method",
              "canonicalReference": "@revenuecat/purchases-js!Purchases#getAppUserId:member(1)",
              "docComment": "/**\n * Gets the current app user id.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAppUserId(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getAppUserId"
            },
            {
              "kind": "Method",
              "canonicalReference": "@revenuecat/purchases-js!Purchases#getCustomerInfo:member(1)",
              "docComment": "/**\n * Gets latest available {@link CustomerInfo}.\n *\n * @returns The latest {@link CustomerInfo}.\n *\n * @throws\n *\n * {@link PurchasesError} if there is an error while fetching the customer info.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCustomerInfo(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CustomerInfo",
                  "canonicalReference": "@revenuecat/purchases-js!CustomerInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getCustomerInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@revenuecat/purchases-js!Purchases#getOfferings:member(1)",
              "docComment": "/**\n * Fetch the configured offerings for this user. You can configure these in the RevenueCat dashboard.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getOfferings(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Offerings",
                  "canonicalReference": "@revenuecat/purchases-js!Offerings:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getOfferings"
            },
            {
              "kind": "Method",
              "canonicalReference": "@revenuecat/purchases-js!Purchases.getSharedInstance:member(1)",
              "docComment": "/**\n * Get the singleton instance of Purchases. It's preferred to use the instance obtained from the {@link Purchases.configure} method when possible.\n *\n * @throws\n *\n * {@link UninitializedPurchasesError} if the instance has not been initialized yet.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static getSharedInstance(): "
                },
                {
                  "kind": "Reference",
                  "text": "Purchases",
                  "canonicalReference": "@revenuecat/purchases-js!Purchases:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getSharedInstance"
            },
            {
              "kind": "Method",
              "canonicalReference": "@revenuecat/purchases-js!Purchases.isConfigured:member(1)",
              "docComment": "/**\n * Returns whether the Purchases SDK is configured or not.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static isConfigured(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "isConfigured"
            },
            {
              "kind": "Method",
              "canonicalReference": "@revenuecat/purchases-js!Purchases#isEntitledTo:member(1)",
              "docComment": "/**\n * Convenience method to check whether a user is entitled to a specific entitlement. This will use {@link Purchases.getCustomerInfo} under the hood.\n *\n * @param entitlementIdentifier - The entitlement identifier you want to check.\n *\n * @returns Whether the user is entitled to the specified entitlement\n *\n * @throws\n *\n * {@link PurchasesError} if there is an error while fetching the customer info.\n *\n * @see\n *\n * {@link Purchases.getCustomerInfo}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isEntitledTo(entitlementIdentifier: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<boolean>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "entitlementIdentifier",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "isEntitledTo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@revenuecat/purchases-js!Purchases#isSandbox:member(1)",
              "docComment": "/**\n * @returns Whether the SDK is using a sandbox API Key.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isSandbox(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "isSandbox"
            },
            {
              "kind": "Method",
              "canonicalReference": "@revenuecat/purchases-js!Purchases#purchase:member(1)",
              "docComment": "/**\n * Method to perform a purchase for a given package. You can obtain the package from {@link Purchases.getOfferings}. This method will present the purchase form on your site, using the given HTML element as the mount point, if provided, or as a modal if not.\n *\n * @param params - The parameters object to customise the purchase flow. Check {@link PurchaseParams}\n *\n * @returns a Promise for the customer info after the purchase is completed successfully.\n *\n * @throws\n *\n * {@link PurchasesError} if there is an error while performing the purchase. If the {@link PurchasesError.errorCode} is {@link ErrorCode.UserCancelledError}, the user cancelled the purchase.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "purchase(params: "
                },
                {
                  "kind": "Reference",
                  "text": "PurchaseParams",
                  "canonicalReference": "@revenuecat/purchases-js!PurchaseParams:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<{\n             customerInfo: "
                },
                {
                  "kind": "Reference",
                  "text": "CustomerInfo",
                  "canonicalReference": "@revenuecat/purchases-js!CustomerInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n         }>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "purchase"
            },
            {
              "kind": "Method",
              "canonicalReference": "@revenuecat/purchases-js!Purchases#purchasePackage:member(1)",
              "docComment": "/**\n * Method to perform a purchase for a given package. You can obtain the package from {@link Purchases.getOfferings}. This method will present the purchase form on your site, using the given HTML element as the mount point, if provided, or as a modal if not.\n *\n * @deprecated\n *\n * - please use .purchase\n *\n * @param rcPackage - The package you want to purchase. Obtained from {@link Purchases.getOfferings}.\n *\n * @param customerEmail - The email of the user. If undefined, RevenueCat will ask the customer for their email.\n *\n * @param htmlTarget - The HTML element where the billing view should be added. If undefined, a new div will be created at the root of the page and appended to the body.\n *\n * @returns a Promise for the customer info after the purchase is completed successfully.\n *\n * @throws\n *\n * {@link PurchasesError} if there is an error while performing the purchase. If the {@link PurchasesError.errorCode} is {@link ErrorCode.UserCancelledError}, the user cancelled the purchase.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "purchasePackage(rcPackage: "
                },
                {
                  "kind": "Reference",
                  "text": "Package",
                  "canonicalReference": "@revenuecat/purchases-js!Package:interface"
                },
                {
                  "kind": "Content",
                  "text": ", customerEmail?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", htmlTarget?: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<{\n            customerInfo: "
                },
                {
                  "kind": "Reference",
                  "text": "CustomerInfo",
                  "canonicalReference": "@revenuecat/purchases-js!CustomerInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        }>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "rcPackage",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "customerEmail",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "htmlTarget",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "purchasePackage"
            },
            {
              "kind": "Method",
              "canonicalReference": "@revenuecat/purchases-js!Purchases.setLogLevel:member(1)",
              "docComment": "/**\n * Set the log level. Logs of the given level and below will be printed in the console. Default is `LogLevel.Silent` so no logs will be printed in the console.\n *\n * @param logLevel - LogLevel to set.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static setLogLevel(logLevel: "
                },
                {
                  "kind": "Reference",
                  "text": "LogLevel",
                  "canonicalReference": "@revenuecat/purchases-js!LogLevel:enum"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "logLevel",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setLogLevel"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@revenuecat/purchases-js!PurchasesError:class",
          "docComment": "/**\n * Error class for Purchases SDK. You should handle these errors and react accordingly in your app.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class PurchasesError extends "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "PurchasesError",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@revenuecat/purchases-js!PurchasesError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `PurchasesError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(\n             errorCode: "
                },
                {
                  "kind": "Reference",
                  "text": "ErrorCode",
                  "canonicalReference": "@revenuecat/purchases-js!ErrorCode:enum"
                },
                {
                  "kind": "Content",
                  "text": ", \n             message?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", \n             underlyingErrorMessage?: "
                },
                {
                  "kind": "Content",
                  "text": "string | null | undefined"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "errorCode",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "underlyingErrorMessage",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@revenuecat/purchases-js!PurchasesError#errorCode:member",
              "docComment": "/**\n * Error code for the error. This is useful to appropriately react to different error situations.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly errorCode: "
                },
                {
                  "kind": "Reference",
                  "text": "ErrorCode",
                  "canonicalReference": "@revenuecat/purchases-js!ErrorCode:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "errorCode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@revenuecat/purchases-js!PurchasesError#toString:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toString: "
                },
                {
                  "kind": "Content",
                  "text": "() => string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "toString",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@revenuecat/purchases-js!PurchasesError#underlyingErrorMessage:member",
              "docComment": "/**\n * Underlying error message. This provides more details on the error and can be useful for debugging and logging.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly underlyingErrorMessage?: "
                },
                {
                  "kind": "Content",
                  "text": "string | null | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "underlyingErrorMessage",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@revenuecat/purchases-js!Store:type",
          "docComment": "/**\n * The store where the user originally subscribed.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Store = "
            },
            {
              "kind": "Content",
              "text": "\"app_store\" | \"mac_app_store\" | \"play_store\" | \"amazon\" | \"stripe\" | \"rc_billing\" | \"promotional\" | \"unknown\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "Store",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@revenuecat/purchases-js!SubscriptionOption:interface",
          "docComment": "/**\n * Represents a possible option to purchase a subscription product.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare interface SubscriptionOption extends "
            },
            {
              "kind": "Reference",
              "text": "PurchaseOption",
              "canonicalReference": "@revenuecat/purchases-js!PurchaseOption:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "name": "SubscriptionOption",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!SubscriptionOption#base:member",
              "docComment": "/**\n * The base phase for a SubscriptionOption, represents the price that the customer will be charged after all the discounts have been consumed and the period at which it will renew.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly base: "
                },
                {
                  "kind": "Reference",
                  "text": "PricingPhase",
                  "canonicalReference": "@revenuecat/purchases-js!PricingPhase:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "base",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@revenuecat/purchases-js!SubscriptionOption#trial:member",
              "docComment": "/**\n * The trial information for this subscription option if available.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly trial: "
                },
                {
                  "kind": "Reference",
                  "text": "PricingPhase",
                  "canonicalReference": "@revenuecat/purchases-js!PricingPhase:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "trial",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@revenuecat/purchases-js!UninitializedPurchasesError:class",
          "docComment": "/**\n * Error indicating that the SDK was accessed before it was initialized.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class UninitializedPurchasesError extends "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/Purchases.es.d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "UninitializedPurchasesError",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@revenuecat/purchases-js!UninitializedPurchasesError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `UninitializedPurchasesError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": []
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        }
      ]
    }
  ]
}
